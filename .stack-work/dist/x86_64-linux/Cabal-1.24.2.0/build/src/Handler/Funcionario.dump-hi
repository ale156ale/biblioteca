
==================== FINAL INTERFACE ====================
2019-06-05 22:23:34.380621 UTC

interface aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX:Handler.Funcionario 8002
  interface hash: 12ca19d128f2621e62ed809584f4a23e
  ABI hash: 64f48ccc291b099a9b15d789a6679e20
  export-list hash: c22f8a2b5a6d2c43f42af16bce765cf0
  orphan hash: 14bbabc3107fc0587c1714b59a079913
  flag hash: f123df0d0ff34442f243f0943d78ec4c
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handler.Funcionario.formFuncionario
  Handler.Funcionario.formFuncionarioAlt
  Handler.Funcionario.getFuncionarioAlteraR
  Handler.Funcionario.getFuncionarioPerfilR
  Handler.Funcionario.getFuncionarioR
  Handler.Funcionario.getTodosFuncionariosR
  Handler.Funcionario.postFuncionarioAlteraR
  Handler.Funcionario.postFuncionarioApagarR
  Handler.Funcionario.postFuncionarioR
module dependencies: Foundation Import Import.NoFoundation Model
                     Settings Settings.StaticFiles
package dependencies: ReadArgs-1.2.3@ReadArgs-1.2.3-FZlTw1cmwFABXd9Qu17GpK
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      aeson-compat-0.3.6@aeson-compat-0.3.6-HFlClSgXxbU7TMoWqS5Yu4
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-CmDkwNPA51zjuzFcENFZ5
                      asn1-parse-0.9.4@asn1-parse-0.9.4-HSgo3I4Jg5sAQWRFdyScvb
                      asn1-types-0.3.2@asn1-types-0.3.2-Ls8owv2hbTfEqG1LKzBcjy
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-CiauZZhskHA6jYy7CqE2mZ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw
                      basic-prelude-0.6.1.1@basic-prelude-0.6.1.1-888xsTDtS2CGSoHb1JadEF
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      chunked-data-0.3.0@chunked-data-0.3.0-OOunTfArGE2y1nE8RKgW4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-Iep5jMzxM1u3mGzM17Av1H
                      classy-prelude-1.2.0.1@classy-prelude-1.2.0.1-DI7QyZr6dYQLSGY5Zda29N
                      classy-prelude-conduit-1.2.0@classy-prelude-conduit-1.2.0-4VNoIEo9SLt6t7N4PwpkXU
                      classy-prelude-yesod-1.2.0@classy-prelude-yesod-1.2.0-4tCQqVxZHk5JE3z6jrBT3F
                      clientsession-0.9.1.2@clientsession-0.9.1.2-1HgInPlmxWUKWaagfkcDtu
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-CbpWlJJbANPFWzQzUVNtDU
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-7E5s9ndt8OF7NNDH3ifO8K
                      constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cprng-aes-0.6.1@cprng-aes-0.6.1-CtFLLcV33ZSKCmRTVWdrW7
                      crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-JSCTZhqOXgH3EkiMgDwxX
                      crypto-random-0.0.9@crypto-random-0.0.9-381865WP41XFXsmS6fCaFj
                      cryptonite-0.23@cryptonite-0.23-7SwQljDtwztDJ3Fe01tUO9
                      cryptonite-conduit-0.2.0@cryptonite-conduit-0.2.0-LH1qspLlLTXKv70D84KCUO
                      css-text-0.1.2.2@css-text-0.1.2.2-GtPTSZ9vPefILuf2bXZD6W
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      dlist-instances-0.1.1.1@dlist-instances-0.1.1.1-JrfDmjAHlXKJeRjjD0rY07
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml
                      entropy-0.3.8@entropy-0.3.8-14HIw40nRRY968j6AdY1H4
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-7GMVhEi1femFXwSQxV5ynm
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-AT41KDpP9ayH63FPNXWrvF
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-9yHxBE9KmNa1D1xDvn7C4m
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-5MsxxcFsbFW2aX71Hx1I7R
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT
                      lifted-async-0.9.3@lifted-async-0.9.3-1Yr94BjFrURGjFULK2k39c
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-GdBguxykhKWC3gIuWq62O9
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      monad-unlift-0.2.0@monad-unlift-0.2.0-JaCplLBosjYCz9UWF6Saxw
                      mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV
                      mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n
                      persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS
                      pointed-5@pointed-5-GlRizu1aJXO3QG4Xelc8BV
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-7wqiM7f7ESv7wSvmAjfLqt
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-GmoeVeJ8L5Y51jMJ5dPk3U
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      say-0.1.0.0@say-0.1.0.0-4kg0VW7izQr10eu93ritVO
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      securemem-0.1.9@securemem-0.1.9-I1DISfcspndD6idpVbMBWq
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      skein-1.0.9.4@skein-1.0.9.4-H6iwU6ZhWxE28U4xCLTfo3
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-HO0sHb651BeFnnIxljlexR
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-IxCmr8GdEutIrVRgKylzM6
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-IWVzgvpaMYRH5pqRQk33K1
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
                      wai-logger-2.3.0@wai-logger-2.3.0-G2LMsBpHwLV49tDfVWxzX4
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-IixRXIQfpHlXunpaQDNuQ
                      x509-store-1.6.5@x509-store-1.6.5-LPi8AM9vMZO97SZk6SmtWd
                      x509-system-1.6.6@x509-system-1.6.6-GUxFbyk0TndCMp8nKvvL3M
                      x509-validation-1.6.9@x509-validation-1.6.9-4jWSRkWS3kAKZsU0SpJst
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-2Pr735gWMIKE1KECS4SIv1
                      yaml-0.8.23.3@yaml-0.8.23.3-C6ya2ht5lnU5AAyP9utctL
                      yesod-1.4.5@yesod-1.4.5-GDhOBR6sYcs6xIyNy56Max
                      yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V
                      yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU
                      yesod-newsfeed-1.6@yesod-newsfeed-1.6-FVeGFThDxmyHNMY2ecmTrZ
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc
                      yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path.CurrentOS
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX:Foundation
                         aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX:Model
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Block.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.BoxedArray
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Monad
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.MutableBuilder
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.NonEmpty
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Numerical.Subtractive
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ASCII7
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF16
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF32
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.AsciiString
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.OffsetSize
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UArray.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UTF8.Base
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB:Data.Constraint.Forall
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml:Text.Email.Parser
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Bitmap
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Buildable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Element
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Keyed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Mutable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT:Data.Key
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et:Control.Monad.Logger
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Containers
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.MonoTraversable
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.NonNull
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Sequences
                         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.BRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Class
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.DLList
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Deque
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.PRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.SRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.URef
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistConfig
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Internal.Css
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Handler
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types
                         yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  Foundation 4fed6a6ce02d868e609fda2d87290d7d
  Form 26ee10d51091a2c1c5173f356f15abc5
  FuncionarioAlteraR 242a0f4f7a8e6e9a766a2ae71afa7470
  FuncionarioApagarR a5a891113775d79148874cc49e9f3367
  FuncionarioPerfilR 5fb74a06d9899cfd9fbf4946c9d790d1
  FuncionarioR 7d1fdc9b1715b7dc29cc76cf09138b41
  Handler 7d8a11bd33b9e2126a9dfe1a56e4a9d6
  HomeR a1ca682e39bdcf9db803a327759c7c35
  StaticR b61a74d95189608c16720a9298017193
  TodosClientesR 880bea89c0b33a6ed90b1ebbd96f657c
  TodosFuncionariosR 0720807c96234aaad6dc8bf8ad2582b1
  TodosLivrosR 52b2ab1f4bf0f41d12677f9ff39da61c
import  -/  Import 111f3036b077109f08dedea6b6106d4d
  exports: 9ae2287b43e56bc2b5d41732316e3b89
import  -/  Model 0322a236513b611476018acb9209b978
  Funcionario 7118cd502933ff6ca690202794694aff
  Funcionario 784411d46fe997e0aed3471a9cf9611a
  FuncionarioId 310c6ee97f87eae8da6d476d91ef3cc4
  FuncionarioId 438cc7778c47cd631a17e7ac095de822
  funcionarioEmail 090829eac49efc5459fdfed1d4907f8d
  funcionarioSenha d47dede4355b388464f8c9fbc024e18f
import  -/  Settings.StaticFiles 7600c75cbda3de0f6011d876b1fa10e9
  css_bootstrap_css 7fb70e8cf207ea213dca2425cf051440
  imgs_home_jpg 0eafc31a9bddd7c7506fa4c3b8de6d9c
  imgs_logo_jpg f49632d1d75cbbe26beec6fff264606d
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p:Text.Blaze.Html 835f81951872bd48727588c57b8222c5
import  -/  blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob:Text.Blaze.Internal c1d6ebf18cc7de440fbc2d1a2a795843
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistEntity b1a81164694b45dd782d2c329cb2cab2
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistQuery f49c24dcd0623057eaedb42271af367b
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistStore cf3035bd99fb071645511275577dc7fe
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql 8a5f16f2604b86b6eac22fdfa56f00cd
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore 1a99c85383a4a200de2248fb91b4e4b4
import  -/  shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Hamlet f0191913c7fb82d3b277f10e3ea32aec
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text e8aa34be3dde178f567ae461e65c988b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Yesod 671521227b842a05ae6b4e758829bb55
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Handler 5eeae0813494c783beb7f9babd90b06a
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Widget 869ea22c83fb6f57618c9b7917660192
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Fields b5e68f93ddc4541a22fa5732e45437b7
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Functions 5810015c10e4f98493243355fce81778
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Types 6142851bc08ab837886ac4418c1d15a5
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc:Yesod.Persist.Core e6c69656dbdff229818a75455816a39b
addDependentFile "templates/funcionario.hamlet"
780e75d5190401acd98ec6fd492167fb
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Funcionario.$s$fApplicativeHandlerT_$s$fFunctorHandlerT
                     @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fApplicativeHandlerT_$dMonad) -}
d98c97aec36da484931840f3d988fc7e
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta72 :: a)
                   (eta73 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta74 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta72) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta74)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
46b27fad891fd986d3046d86a8694c6f
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
b036331ed6464bf292e1cdfa1769e3c1
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fApplicativeHandlerT_$dMonad) -}
6166d73e5b3c37283ea23224cf7f040c
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT
                   @ Foundation.App) -}
14381750185722f0c8927fcf4084fb39
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Handler.Funcionario.$s$fApplicativeHandlerT_$creturn @ site)
                  (Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail
                     @ site) -}
2f611a761b142d7ea44bc6138ffd05a8
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta72 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta72) -}
ff3de16a7cec344f4bf1a27fd34c76de
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadThrowHandlerT_$cp1MonadThrow
                     @ site)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
4ca3e97a6003cbc9d2ebae5e97278285
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta72 :: GHC.Types.IO α) ->
                 let {
                   eta73 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta72
                 } in
                 (\ (ds3 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta73)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
946c277328226e42ee676951405030c5
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
a082bdf48359f8405b744c011c79153e
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
1c64c36277058581c212f2c5eae78a61
  $s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.$s$fApplicativeHandlerT -}
314ed8610aa2d8c06cc1ff06f3d332e3
  $s$fMonadBasebHandlerT_$s$fMonadThrowHandlerT_$cp1MonadThrow ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT -}
0f5388e0f7e2b6a21af183b693f0f2a1
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fMonadHandlerHandlerT1) -}
25ac21880cc39dd1b52fa781df71e846
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
67a418aa7edf368405b689eadf825c51
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadThrowHandlerT_$cp1MonadThrow
                     @ site)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
dc315a5f31af43bc276527c9e670c379
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadThrowHandlerT_$cp1MonadThrow
                     @ site)
                  (Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
d5e5d5542ec569103f2d0d6452a9efad
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta72 :: GHC.Exception.Exception e)
                   (x15 :: e)
                   (eta73 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta74 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta72 x15) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta74)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
dbdf62ef67d3b96d65120906eb54e000
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handler.Funcionario.$s$fMonadHandlerHandlerT1) -}
a6787b64f01d94711f9749578cc122c8
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Funcionario.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Handler.Funcionario.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Handler.Funcionario.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
30f7960194684bc174b35d133f048743
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
6b8891fd29142bd0a39db443514541ce
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
ad7d3b89cfac4b68b5bff016e653f216
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.$s$fMonadBasebHandlerT -}
d299be6f55a66ccc9d26aa7be8c0c328
  $semailField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ Foundation.Handler
                      @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handler.Funcionario.$s$fFunctorAForm1
                      Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      Yesod.Form.Fields.emailField6
                      eta156)
                   (Yesod.Form.Fields.emailField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
d979e3502b67258531d5742f3d6ae9f2
  $spasswordField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ Foundation.Handler
                      @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handler.Funcionario.$s$fFunctorAForm1
                      Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      eta156)
                   (Yesod.Form.Fields.passwordField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
50e051c5a0ea7ad7174bb7c9edd2a6e1
  $stoWidget6 :: Foundation.App GHC.Types.~~ Foundation.App
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Foundation.App
                   @ Foundation.App
                   @~ <Foundation.App>_N) -}
76e9019745cf3483fb4154fe65e02d14
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handler.Funcionario.$trModule2
                   Handler.Funcionario.$trModule1) -}
e1e03cad65643abf9dbc3cc79f4dcc05
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handler.Funcionario"#) -}
69909d27fb287f631dcb294a8fe98322
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX"#) -}
14413e8e9c9af1785ff343afd14d8893
  formFuncionario ::
    Foundation.Form (Model.Funcionario, Data.Text.Internal.Text)
  {- Arity: 3,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.formFuncionario1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult
                                     (Model.Funcionario, Data.Text.Internal.Text)>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.App>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
7c7645f0018bdda0cc27c83e9b7e8633
  formFuncionario1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult
             (Model.Funcionario, Data.Text.Internal.Text),
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Functions.renderBootstrap1
                   @ Foundation.Handler
                   @ (Model.Funcionario, Data.Text.Internal.Text)
                   (Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   Handler.Funcionario.formFuncionario2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <(Model.Funcionario, Data.Text.Internal.Text)>_N))) -}
bb2cb0836c13da1aab58452411ae138e
  formFuncionario2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Model.Funcionario, Data.Text.Internal.Text),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
2d036ddebac3c45f1fd3abb4bded030e
  formFuncionarioAlt ::
    GHC.Base.Maybe Model.Funcionario
    -> Foundation.Form Model.Funcionario
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.formFuncionarioAlt1
                  `cast`
                (<GHC.Base.Maybe Model.Funcionario>_R
                 ->_R <Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Model.Funcionario>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.App>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
a0aed44f6b2a32831c6683bd71f87582
  formFuncionarioAlt1 ::
    GHC.Base.Maybe Model.Funcionario
    -> Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Model.Funcionario,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (mFuncionario :: GHC.Base.Maybe Model.Funcionario) ->
                 Yesod.Form.Functions.renderBootstrap1
                   @ Foundation.Handler
                   @ Model.Funcionario
                   (Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   (let {
                      ds3 :: Yesod.Form.Types.AForm
                               (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                               Data.Text.Internal.Text
                      = Yesod.Form.Functions.areq
                          @ Foundation.App
                          @ Foundation.Handler
                          @ Data.Text.Internal.Text
                          Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                            `cast`
                          (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                    <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                          Handler.Funcionario.$stoWidget6
                            `cast`
                          (Sym (Data.Type.Equality.N:~[0]
                                    <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                     <GHC.Types.IO>_N
                                                     <Foundation.App>_N)) <Foundation.App>_N)
                          (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                          Handler.Funcionario.$semailField
                          Handler.Funcionario.formFuncionarioAlt7
                          (case mFuncionario of wild {
                             GHC.Base.Nothing -> GHC.Base.Nothing @ Data.Text.Internal.Text
                             GHC.Base.Just x15
                             -> GHC.Base.Just
                                  @ Data.Text.Internal.Text
                                  (case x15 of wild1 { Model.Funcionario ds4 ds5 -> ds4 }) })
                    } in
                    let {
                      ds4 :: Yesod.Form.Types.AForm
                               (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                               Data.Text.Internal.Text
                      = Yesod.Form.Functions.areq
                          @ Foundation.App
                          @ Foundation.Handler
                          @ Data.Text.Internal.Text
                          Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                            `cast`
                          (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                    <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                          Handler.Funcionario.$stoWidget6
                            `cast`
                          (Sym (Data.Type.Equality.N:~[0]
                                    <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                     <GHC.Types.IO>_N
                                                     <Foundation.App>_N)) <Foundation.App>_N)
                          (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                          Handler.Funcionario.$spasswordField
                          Handler.Funcionario.formFuncionarioAlt2
                          (case mFuncionario of wild {
                             GHC.Base.Nothing -> GHC.Base.Nothing @ Data.Text.Internal.Text
                             GHC.Base.Just x15
                             -> GHC.Base.Just
                                  @ Data.Text.Internal.Text
                                  (Model.funcionarioSenha x15) })
                    } in
                    (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
                               [Data.Text.Internal.Text]))
                       (env :: GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))[OneShot]
                       (ints :: Yesod.Form.Types.Ints)[OneShot] ->
                     let {
                       ds5 :: Yesod.Core.Types.HandlerT
                                Foundation.App
                                GHC.Types.IO
                                (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                                 [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                 -> [Yesod.Form.Types.FieldView
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                                 Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                       = ds3
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                              <Data.Text.Internal.Text>_N)
                           mr
                           env
                           ints
                     } in
                     (\ (r :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                        (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      case (ds5
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.App>_N
                                 <GHC.Types.IO>_N
                                 <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                                   [Yesod.Form.Types.FieldView
                                      (Yesod.Core.Class.Handler.HandlerSite
                                         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                   -> [Yesod.Form.Types.FieldView
                                         (Yesod.Core.Class.Handler.HandlerSite
                                            (Yesod.Core.Types.HandlerT
                                               Foundation.App GHC.Types.IO))],
                                   Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.App GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                             s of ds6 { (#,#) ipv ipv1 ->
                      case ipv1 of wild { (,,,) w x15 y z ->
                      case ((ds4
                               `cast`
                             (Yesod.Form.Types.N:AForm[0]
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                                  <Data.Text.Internal.Text>_N)
                               mr
                               env
                               y)
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.App>_N
                                 <GHC.Types.IO>_N
                                 <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                                   [Yesod.Form.Types.FieldView
                                      (Yesod.Core.Class.Handler.HandlerSite
                                         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                   -> [Yesod.Form.Types.FieldView
                                         (Yesod.Core.Class.Handler.HandlerSite
                                            (Yesod.Core.Types.HandlerT
                                               Foundation.App GHC.Types.IO))],
                                   Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.App GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                             ipv of ds7 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 { (,,,) x16 y1 ints'' z1 ->
                      (# ipv2,
                         (case w of wild2 {
                            Yesod.Form.Types.FormMissing
                            -> case x16 of wild3 {
                                 DEFAULT -> Yesod.Form.Types.FormMissing @ Model.Funcionario
                                 Yesod.Form.Types.FormFailure y2
                                 -> Yesod.Form.Types.FormFailure @ Model.Funcionario y2 }
                            Yesod.Form.Types.FormFailure errs
                            -> case x16 of wild3 {
                                 DEFAULT -> Yesod.Form.Types.FormFailure @ Model.Funcionario errs
                                 Yesod.Form.Types.FormFailure y2
                                 -> Yesod.Form.Types.FormFailure
                                      @ Model.Funcionario
                                      (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                            Yesod.Form.Types.FormSuccess a1
                            -> case x16 of wild3 {
                                 Yesod.Form.Types.FormMissing
                                 -> Yesod.Form.Types.FormMissing @ Model.Funcionario
                                 Yesod.Form.Types.FormFailure y2
                                 -> Yesod.Form.Types.FormFailure @ Model.Funcionario y2
                                 Yesod.Form.Types.FormSuccess g
                                 -> Yesod.Form.Types.FormSuccess
                                      @ Model.Funcionario
                                      (Model.$WFuncionario a1 g) } },
                          \ (x17 :: [Yesod.Form.Types.FieldView
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.HandlerT
                                             Foundation.App GHC.Types.IO))]) ->
                          x15 (y1 x17),
                          ints'',
                          case z of wild2 {
                            Yesod.Form.Types.UrlEncoded -> z1
                            Yesod.Form.Types.Multipart
                            -> Yesod.Form.Types.Multipart }) #) } } } })
                       `cast`
                     (Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <(Yesod.Form.Types.FormResult Model.Funcionario,
                                           [Yesod.Form.Types.FieldView
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerT
                                                    Foundation.App GHC.Types.IO))]
                                           -> [Yesod.Form.Types.FieldView
                                                 (Yesod.Core.Class.Handler.HandlerSite
                                                    (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO))],
                                           Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <(Yesod.Form.Types.FormResult Model.Funcionario,
                                      [Yesod.Form.Types.FieldView
                                         (Yesod.Core.Class.Handler.HandlerSite
                                            (Yesod.Core.Types.HandlerT
                                               Foundation.App GHC.Types.IO))]
                                      -> [Yesod.Form.Types.FieldView
                                            (Yesod.Core.Class.Handler.HandlerSite
                                               (Yesod.Core.Types.HandlerT
                                                  Foundation.App GHC.Types.IO))],
                                      Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N))))
                      `cast`
                    (Sym (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                              <Model.Funcionario>_N)))) -}
dd5533acccd670e401899b014f6b3a28
  formFuncionarioAlt10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   ipv1
                   4#
                   Handler.Funcionario.formFuncionarioAlt11
                   0#
                   ipv }) -}
56a55d11bd84bec38a916a3bc8573a38
  formFuncionarioAlt11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "E-mail:"#) -}
31ee36ab96f2dfe06c5042b4525fe972
  formFuncionarioAlt2 ::
    Yesod.Form.Types.FieldSettings Foundation.App
  {- Strictness: m,
     Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Funcionario.formFuncionarioAlt3
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
d880fe4d9cbf67db6b8ba9a0ba0d17ac
  formFuncionarioAlt3 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Funcionario.formFuncionarioAlt4) -}
328a54a01f16e333540e6a04877cf58e
  formFuncionarioAlt4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handler.Funcionario.formFuncionarioAlt5 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
82904892504547519b5a794cc97873e4
  formFuncionarioAlt5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   ipv1
                   4#
                   Handler.Funcionario.formFuncionarioAlt6
                   0#
                   ipv }) -}
ca6df03bb551c626121ec0b17a9f8445
  formFuncionarioAlt6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Senha:"#) -}
b8c1adb3bfadb57a113fc4e5790c6ce1
  formFuncionarioAlt7 ::
    Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Funcionario.formFuncionarioAlt8
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
6a560832d94d6438c9061f63a0e80acb
  formFuncionarioAlt8 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Funcionario.formFuncionarioAlt9) -}
147944af40e2aa9668cc249b33ec066f
  formFuncionarioAlt9 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handler.Funcionario.formFuncionarioAlt10 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
3a2c54068f7ab0716b3de24b498f9ba3
  getFuncionarioAlteraR ::
    Model.FuncionarioId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
ba35b7dfe3642889dffd0ce0e6720045
  getFuncionarioPerfilR ::
    Model.FuncionarioId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (funcid :: Model.FuncionarioId) ->
                 let {
                   ds3 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.Internal.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                            Model.Funcionario
                   = Handler.Funcionario.getFuncionarioPerfilR25 funcid
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistApp1
                         @ Model.Funcionario
                         ds3
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                            <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                            <Model.Funcionario>_N)_R
                         r
                         s of ds4 { (#,#) ipv ipv1 ->
                  ((Foundation.$fYesodApp_$cdefaultLayout
                      (let {
                         x15 :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route
                                            (Yesod.Core.Class.Handler.HandlerSite
                                               (Yesod.Core.Types.WidgetT
                                                  Foundation.App GHC.Types.IO)))) #)
                           {- Arity: 1, Strictness: <S,U> -}
                         = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           let {
                             eta72 :: Data.Text.Internal.Text
                             = case ipv1 of wild { Model.Funcionario ds5 ds6 -> ds5 }
                           } in
                           let {
                             eta73 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text eta72
                           } in
                           let {
                             eta74 :: Text.Blaze.Html.Html
                             = Text.Blaze.Internal.Content @ () eta73 GHC.Tuple.()
                           } in
                           (# s1,
                              (GHC.Tuple.(),
                               (Yesod.Core.Types.GWData
                                  @ (Yesod.Routes.Class.Route Foundation.App)
                                  (\ (ds5 :: Yesod.Routes.Class.Route Foundation.App
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text) ->
                                   eta74)
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Body[0]
                                            <Yesod.Routes.Class.Route Foundation.App>_R))
                                  (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                    `cast`
                                  (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Script
                                          (Yesod.Routes.Class.Route Foundation.App)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Script
                                               (Yesod.Routes.Class.Route Foundation.App)>_R))
                                  (GHC.Base.id
                                     @ [Yesod.Core.Types.Stylesheet
                                          (Yesod.Routes.Class.Route Foundation.App)])
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:UniqueList[0]
                                            <Yesod.Core.Types.Stylesheet
                                               (Yesod.Routes.Class.Route Foundation.App)>_R))
                                  (Data.Map.Base.Tip
                                     @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                     @ ((Yesod.Routes.Class.Route Foundation.App
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Data.Text.Internal.Builder.Builder))
                                  (GHC.Base.Nothing
                                     @ ((Yesod.Routes.Class.Route Foundation.App
                                         -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                         -> Data.Text.Internal.Text)
                                        -> Text.Julius.Javascript))
                                  (Yesod.Core.Types.$fApplicativeWidgetT2
                                     @ (Yesod.Routes.Class.Route Foundation.App))
                                    `cast`
                                  (Sym (Yesod.Core.Types.N:Head[0]
                                            <Yesod.Routes.Class.Route Foundation.App>_R)))
                                 `cast`
                               (Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                               <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)
                       } in
                       let {
                         m11 :: Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                -> GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route
                                            (Yesod.Core.Class.Handler.HandlerSite
                                               (Yesod.Core.Types.WidgetT
                                                  Foundation.App GHC.Types.IO)))) #)
                           {- Arity: 2, Strictness: <L,A>,
                              Unfolding: InlineRule (1, True, True)
                                         (\ (eta72 :: Yesod.Core.Types.HandlerData
                                                        Foundation.App
                                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                            (eta73 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                          x15 eta73) -}
                         = \ (eta72 :: Yesod.Core.Types.HandlerData
                                         Foundation.App
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                           x15
                       } in
                       let {
                         lvl151 :: ()
                                   -> Yesod.Core.Types.HandlerData
                                        Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Types.IO
                                        ((),
                                         Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route Foundation.App))
                           {- Arity: 2 -}
                         = \ (ds5 :: ())
                             (eta72 :: Yesod.Core.Types.HandlerData
                                         Foundation.App
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.App
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             m11
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.App>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                             Handler.Funcionario.getFuncionarioPerfilR8
                               `cast`
                             (<()>_R
                              ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                             eta72
                       } in
                       let {
                         lvl152 :: ()
                                   -> Yesod.Core.Types.HandlerData
                                        Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Types.IO
                                        ((),
                                         Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route Foundation.App))
                           {- Arity: 2 -}
                         = \ (ds5 :: ())
                             (eta72 :: Yesod.Core.Types.HandlerData
                                         Foundation.App
                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.App
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             Handler.Funcionario.getFuncionarioPerfilR3
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.App>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                             lvl151
                               `cast`
                             (<()>_R
                              ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                             eta72
                       } in
                       (\ (eta72 :: Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                        Yesod.Core.Types.$fApplicativeWidgetT3
                          @ GHC.Types.IO
                          @ Foundation.App
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handler.Funcionario.getFuncionarioPerfilR1
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              ((,)
                                                 <()>_R
                                                 (Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                 <GHC.Types.IO>_N
                                                                 <Foundation.App>_N)))_R)_R)_R))
                               (Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                          lvl152
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          eta72)
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.App>_N <GHC.Types.IO>_N <()>_N))))
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)))) -}
e27256433ad8426a52aa537ac2e795ca
  getFuncionarioPerfilR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioPerfilR2 eta73) -}
a3b12bfaaa15281ea8fbd5b750ec2a84
  getFuncionarioPerfilR10 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta73, Handler.Funcionario.getFuncionarioPerfilR11 #)) -}
589ab8266da1643c79b8b7d22f6b35e4
  getFuncionarioPerfilR11 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Funcionario.getFuncionarioPerfilR12
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)) -}
95db52710fed5c3621123c894ede403f
  getFuncionarioPerfilR12 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Handler.Funcionario.getFuncionarioPerfilR13
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
6050f56ae9d28fb2277a4877df2e8ba1
  getFuncionarioPerfilR13 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handler.Funcionario.getFuncionarioPerfilR_eta1) -}
9f29f53b2f9ac8c5a174c20fe214c307
  getFuncionarioPerfilR14 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioPerfilR15) -}
24128d9763199624d8b21833e3a2d113
  getFuncionarioPerfilR15 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioPerfilR16) -}
b60951983ddbe70b6ff42ab2abe4de72
  getFuncionarioPerfilR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " class=\"btn btn-primary btn-sm active\" role=\"button\" aria-pressed=\"true\">Voltar</br>\n"#) -}
dc9dcfa3c4191efb7741b2d938bc6feb
  getFuncionarioPerfilR17 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR19
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.App>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                               <GHC.Types.IO>_N <Foundation.App>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.Funcionario.getFuncionarioPerfilR18) -}
acb083cd28eb61d0b064d620465e984c
  getFuncionarioPerfilR18 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ (urender :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 let {
                   eta72 :: Data.Text.Internal.Text
                   = urender
                       Foundation.TodosFuncionariosR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta73 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta72
                 } in
                 let {
                   eta74 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta73 GHC.Tuple.()
                 } in
                 let {
                   lvl151 :: (Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                     eta74
                 } in
                 let {
                   lvl152 :: Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl151
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl153 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl152
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 (\ (eta75 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta76 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta76, lvl153 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.App>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
a0e54a95f5b3f629bae53a8f02904fa8
  getFuncionarioPerfilR19 ::
    Yesod.Core.Types.WidgetT
      Foundation.App
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)
                   (Handler.Funcionario.$s$fMonadHandlerWidgetT @ Foundation.App)) -}
37a493dbf4aa60c33196a62ec6394dc7
  getFuncionarioPerfilR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO)))>_R))
                       (GHC.Types.:
                          @ (Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                          (Yesod.Core.Types.Stylesheet
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))
                             (Yesod.Core.Types.Local
                                @ (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))
                                (Foundation.StaticR
                                   Settings.StaticFiles.css_bootstrap_css1
                                     `cast`
                                   (Sym (Yesod.Static.D:R:RouteStatic0[0])))
                                  `cast`
                                (Trans
                                     (Sym (Foundation.D:R:RouteApp0[0]))
                                     (Yesod.Routes.Class.Route
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                  <GHC.Types.IO>_N <Foundation.App>_N)))_R))
                             (GHC.Types.[]
                                @ (Data.Text.Internal.Text, Data.Text.Internal.Text))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO)))>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.App GHC.Types.IO))>_R))) #)) -}
a7cbb0a759f847742c2d4adaeb980f6c
  getFuncionarioPerfilR20 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioPerfilR21 eta73) -}
c5837059cadebb41a544ba3ce4ac7096
  getFuncionarioPerfilR21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handler.Funcionario.getFuncionarioPerfilR_eta2)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
0c00711e8d523551fe9150f423348dff
  getFuncionarioPerfilR22 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioPerfilR23) -}
25f018d5571ab9bc54f65a752e64a865
  getFuncionarioPerfilR23 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioPerfilR24) -}
f616efaf546bd67dfd86696a4fb2c24d
  getFuncionarioPerfilR24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "</h1>\n\
                   \<br><br><a href="#) -}
038ed0754baad4db6b66113fc5024bc7
  getFuncionarioPerfilR25 ::
    Database.Persist.Class.PersistEntity.Key Model.Funcionario
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         Model.Funcionario
  {- Unfolding: (Yesod.Persist.Core.get404
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Model.Funcionario
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.App)
                   Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend
                   Handler.Funcionario.getFuncionarioPerfilR26
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Model.Funcionario>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendFuncionario[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
18406cfa28aa6ce53687fd4979d4c886
  getFuncionarioPerfilR26 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Model.Funcionario,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Model.$fPersistEntityFuncionario,
                  Handler.Funcionario.getFuncionarioPerfilR27
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
d2fae1cb2bb58329708d7a230366712e
  getFuncionarioPerfilR27 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
0bdf3cc46d016d54989229ba4ec9ae55
  getFuncionarioPerfilR3 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioPerfilR4 eta73) -}
b55b900b5fa7dd1930d42ff6ad7c1650
  getFuncionarioPerfilR4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handler.Funcionario.getFuncionarioPerfilR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
ac71c48eeff25916f4121e434de02cbd
  getFuncionarioPerfilR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioPerfilR6) -}
01423f9ecbf93b04509f77948d86685a
  getFuncionarioPerfilR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioPerfilR7) -}
7d49fda334504015bc144d8289a34798
  getFuncionarioPerfilR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1>Email:  "#) -}
5a1417e8d2e6770c75f95b7e1b65a940
  getFuncionarioPerfilR8 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 2,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR20
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.App>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   Handler.Funcionario.getFuncionarioPerfilR9
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   eta72) -}
f1b4db7da7b3505a52c3360d66b93350
  getFuncionarioPerfilR9 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 2,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR17
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   Handler.Funcionario.getFuncionarioPerfilR10
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.App>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   eta72) -}
eb2fcb73209cbce26c7d143f89927504
  getFuncionarioPerfilR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR5
                   GHC.Tuple.()) -}
038409900c129c314307d07fe71a8b5c
  getFuncionarioPerfilR_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR14
                   GHC.Tuple.()) -}
be782f5b9fd6175514e63fac446032ac
  getFuncionarioPerfilR_eta2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR22
                   GHC.Tuple.()) -}
e1e4233d8f1d4410719589b870559675
  getFuncionarioR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.getFuncionarioR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
a520124c6469fe1d24866d84d908636e
  getFuncionarioR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Funcionario.getFuncionarioR41
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds3 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 case (Handler.Funcionario.getFuncionarioR40
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.Maybe Text.Blaze.Html.Html>_R)
                        ipv of ds4 { (#,#) ipv2 ipv3 ->
                 let {
                   m11 :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                          -> GHC.Types.IO
                               ((),
                                Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
                     {- Arity: 1, Strictness: <L,1*U(U,U,U,A,U)>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (eta72 :: Yesod.Core.Types.HandlerData
                                                  Foundation.App
                                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                                    widget
                                      `cast`
                                    (Trans
                                         (Yesod.Core.Types.N:WidgetT[0]
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N <Foundation.App>_N))
                                              <GHC.Types.IO>_N
                                              <()>_N)
                                         ((Yesod.Core.Types.HandlerData
                                             (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                  <GHC.Types.IO>_N <Foundation.App>_N)
                                             (Sub (Yesod.Core.Types.D:R:MonadRouteIO[0])))_R
                                          ->_R (GHC.Types.IO
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.App>_N))_R)_R)_R)_R))
                                      (case eta72 of wild1 { Yesod.Core.Types.HandlerData ds5 ds6 dt ds7 dt1 ->
                                       Yesod.Core.Types.HandlerData
                                         @ Foundation.App
                                         @ ()
                                         ds5
                                         ds6
                                         dt
                                         (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                            @ Foundation.App)
                                         dt1 })) -}
                   = \ (eta72 :: Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     widget
                       `cast`
                     (Trans
                          (Yesod.Core.Types.N:WidgetT[0]
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.App>_N))
                               <GHC.Types.IO>_N
                               <()>_N)
                          ((Yesod.Core.Types.HandlerData
                              (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                   <GHC.Types.IO>_N <Foundation.App>_N)
                              (Sub (Yesod.Core.Types.D:R:MonadRouteIO[0])))_R
                           ->_R (GHC.Types.IO
                                   ((,)
                                      <()>_R
                                      (Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route
                                            (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                 <GHC.Types.IO>_N <Foundation.App>_N))_R)_R)_R)_R))
                       (case eta72 of wild1 { Yesod.Core.Types.HandlerData ds5 ds6 dt ds7 dt1 ->
                        Yesod.Core.Types.HandlerData
                          @ Foundation.App
                          @ ()
                          ds5
                          ds6
                          dt
                          (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2 @ Foundation.App)
                          dt1 })
                 } in
                 let {
                   lvl151 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.App))
                     {- Arity: 2 -}
                   = \ (ds5 :: ())
                       (eta72 :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.App
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       m11
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       Handler.Funcionario.getFuncionarioR15
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       eta72
                 } in
                 let {
                   lvl152 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.App))
                     {- Arity: 2 -}
                   = \ (ds5 :: ())
                       (eta72 :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.App
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Handler.Funcionario.getFuncionarioR10
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.App>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                       lvl151
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       eta72
                 } in
                 let {
                   lvl153 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.App))
                     {- Arity: 2 -}
                   = \ (ds5 :: ())
                       (eta72 :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.App
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Handler.Funcionario.getFuncionarioR8
                         `cast`
                       (Sym (Yesod.Core.Types.N:WidgetT[0]
                                 <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       lvl152
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       eta72
                 } in
                 let {
                   lvl154 :: ()
                             -> Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                             -> GHC.Types.IO
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.App))
                     {- Arity: 2 -}
                   = \ (ds5 :: ())
                       (eta72 :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.App
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Handler.Funcionario.getFuncionarioR3
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.App>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                       lvl153
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       eta72
                 } in
                 ((Foundation.$fYesodApp_$cdefaultLayout
                     (let {
                        m12 :: Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
                        = case ipv3 of wild1 {
                            GHC.Base.Nothing
                            -> Handler.Funcionario.getFuncionarioR2
                                 `cast`
                               (Trans
                                    (<Yesod.Core.Types.HandlerData
                                        Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <((),
                                                     Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          Foundation.App))>_R))
                                    (Sym (Yesod.Core.Types.N:WidgetT[0]
                                              <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            GHC.Base.Just x15
                            -> let {
                                 lvl155 :: (Yesod.Routes.Class.Route Foundation.App
                                            -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                            -> Data.Text.Internal.Text)
                                           -> Text.Blaze.Html.Html
                                   {- Arity: 1 -}
                                 = \ (ds5 :: Yesod.Routes.Class.Route Foundation.App
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text) ->
                                   x15
                               } in
                               let {
                                 lvl156 :: Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route Foundation.App)
                                 = Yesod.Core.Types.GWData
                                     @ (Yesod.Routes.Class.Route Foundation.App)
                                     lvl155
                                       `cast`
                                     (Sym (Yesod.Core.Types.N:Body[0]
                                               <Yesod.Routes.Class.Route Foundation.App>_R))
                                     (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                       `cast`
                                     (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                     (GHC.Base.id
                                        @ [Yesod.Core.Types.Script
                                             (Yesod.Routes.Class.Route Foundation.App)])
                                       `cast`
                                     (Sym (Yesod.Core.Types.N:UniqueList[0]
                                               <Yesod.Core.Types.Script
                                                  (Yesod.Routes.Class.Route Foundation.App)>_R))
                                     (GHC.Base.id
                                        @ [Yesod.Core.Types.Stylesheet
                                             (Yesod.Routes.Class.Route Foundation.App)])
                                       `cast`
                                     (Sym (Yesod.Core.Types.N:UniqueList[0]
                                               <Yesod.Core.Types.Stylesheet
                                                  (Yesod.Routes.Class.Route Foundation.App)>_R))
                                     (Data.Map.Base.Tip
                                        @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                        @ ((Yesod.Routes.Class.Route Foundation.App
                                            -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                            -> Data.Text.Internal.Text)
                                           -> Data.Text.Internal.Builder.Builder))
                                     (GHC.Base.Nothing
                                        @ ((Yesod.Routes.Class.Route Foundation.App
                                            -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                            -> Data.Text.Internal.Text)
                                           -> Text.Julius.Javascript))
                                     (Yesod.Core.Types.$fApplicativeWidgetT2
                                        @ (Yesod.Routes.Class.Route Foundation.App))
                                       `cast`
                                     (Sym (Yesod.Core.Types.N:Head[0]
                                               <Yesod.Routes.Class.Route Foundation.App>_R))
                               } in
                               let {
                                 lvl157 :: ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route
                                                 (Yesod.Core.Class.Handler.HandlerSite
                                                    (Yesod.Core.Types.WidgetT
                                                       Foundation.App GHC.Types.IO))))
                                 = (GHC.Tuple.(),
                                    lvl156
                                      `cast`
                                    (Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route
                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                    <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                               } in
                               (\ (eta72 :: Yesod.Core.Types.HandlerData
                                              Foundation.App
                                              (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                  (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                (# eta73, lvl157 #))
                                 `cast`
                               (Trans
                                    (<Yesod.Core.Types.HandlerData
                                        Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   ((,)
                                                      <()>_R
                                                      (Yesod.Core.Types.GWData
                                                         (Yesod.Routes.Class.Route
                                                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                      <GHC.Types.IO>_N
                                                                      <Foundation.App>_N)))_R)_R)_R))
                                    (Sym (Yesod.Core.Types.N:WidgetT[0]
                                              <Foundation.App>_N <GHC.Types.IO>_N <()>_N))) }
                      } in
                      let {
                        lvl155 :: ()
                                  -> Yesod.Core.Types.HandlerData
                                       Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                  -> GHC.Types.IO
                                       ((),
                                        Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds5 :: ())
                            (eta72 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m12
                            lvl154
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            eta72
                      } in
                      (\ (eta72 :: Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.App
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handler.Funcionario.getFuncionarioPerfilR1
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.App>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                         lvl155
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                         eta72)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv2 } } }) -}
ad74a7da9d286721ea91f1b13ea025da
  getFuncionarioR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioR11 eta73) -}
4439fa56f1d122c7086d509282ded9da
  getFuncionarioR11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handler.Funcionario.getFuncionarioR_eta1)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
7aaa8d720aec14ca63d1f5eefd59c119
  getFuncionarioR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioR13) -}
7b0653421b7e3f77881421156641f449
  getFuncionarioR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioR14) -}
50fdd68917b78ec10887fc0c04255c65
  getFuncionarioR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" method=\"post\">"#) -}
8ff9ba1ddb9320c491dc0f9dfdbb05d8
  getFuncionarioR15 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 2,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handler.Funcionario.getFuncionarioR35
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.App>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   Handler.Funcionario.getFuncionarioR16
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   eta72) -}
1caec2433913ce82f9700e5ee6e0659c
  getFuncionarioR16 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 2,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handler.Funcionario.getFuncionarioR33
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   Handler.Funcionario.getFuncionarioR17
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   eta72) -}
088219ce782dcd1c7a52d46c801d521d
  getFuncionarioR17 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 2,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handler.Funcionario.getFuncionarioR28
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.App>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   Handler.Funcionario.getFuncionarioR18
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   eta72) -}
b873f0383ee32fcf7fef9e85e5d92cde
  getFuncionarioR18 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 2,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Handler.Funcionario.getFuncionarioR26
                     `cast`
                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                   Handler.Funcionario.getFuncionarioR19
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.App>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   eta72) -}
e2156b1ba3bb821e668c3b4df71e7ada
  getFuncionarioR19 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds3 :: ())
                   (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta73, Handler.Funcionario.getFuncionarioR20 #)) -}
6e9ab5f4b60f264d1d57797233de93fd
  getFuncionarioR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.App)) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta73,
                    (GHC.Tuple.(),
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.App)) #)) -}
aacefccc67043bd179c837ebcd13072e
  getFuncionarioR20 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Funcionario.getFuncionarioR21
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)) -}
a87b7fe83d9a371f577ea234b6bf0799
  getFuncionarioR21 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Handler.Funcionario.getFuncionarioR22
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
ee7d06d05c5fa8f1b7c9fafadfefa874
  getFuncionarioR22 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                           -> Data.Text.Internal.Text) ->
                 Handler.Funcionario.getFuncionarioR_eta2) -}
401ef7a506d02d490150364c043aa419
  getFuncionarioR23 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioR24) -}
4ee59e57f478eae7fbb98f5a3f61ede6
  getFuncionarioR24 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioR25) -}
e03c308025e3261fb19e5f1114418f4a
  getFuncionarioR25 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" role=\"button\" aria-pressed=\"true\">Lista Todos</a>\n\
                   \</form>\n"#) -}
54e7ea92131250293c4ae26e32b4acb4
  getFuncionarioR26 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR19
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.App>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                               <GHC.Types.IO>_N <Foundation.App>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.Funcionario.getFuncionarioR27) -}
d25e4b979c2c2bee0cc1fc2b5277f5c9
  getFuncionarioR27 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ (urender :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 let {
                   eta72 :: Data.Text.Internal.Text
                   = urender
                       Foundation.TodosFuncionariosR
                         `cast`
                       (Sym (Foundation.D:R:RouteApp0[0]))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta73 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta72
                 } in
                 let {
                   eta74 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta73 GHC.Tuple.()
                 } in
                 let {
                   lvl151 :: (Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                     eta74
                 } in
                 let {
                   lvl152 :: Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl151
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl153 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl152
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 (\ (eta75 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta76 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta76, lvl153 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.App>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
8e82bf7a18889e89219a82c49c6935a4
  getFuncionarioR28 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioR29 eta73) -}
755fe6541df5121b26f9bc59af518886
  getFuncionarioR29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handler.Funcionario.getFuncionarioR_eta3)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
62a914ac8a01743a5bedc38d11657d95
  getFuncionarioR3 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioR4 eta73) -}
15a6b66adc62cdf5b69182e05d3a1217
  getFuncionarioR30 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioR31) -}
266eae06e5a90c4eeade87da62af3105
  getFuncionarioR31 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioR32) -}
4e7aa9fd48c6ededc03c429fed61de38
  getFuncionarioR32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" role=\"button\" aria-pressed=\"true\">Principal</a>\n\
                   \&nbsp;&nbsp;&nbsp;&nbsp;\n\
                   \<a class=\"btn btn-primary btn-sm active\" href=\""#) -}
4dabfd90d7c21beeef24c0c9914ff709
  getFuncionarioR33 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR19
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.App>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                               <GHC.Types.IO>_N <Foundation.App>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.Funcionario.getFuncionarioR34) -}
8e38fd482c825fdae731735dad00578c
  getFuncionarioR34 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ (urender :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 let {
                   eta72 :: Data.Text.Internal.Text
                   = urender
                       Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta73 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta72
                 } in
                 let {
                   eta74 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta73 GHC.Tuple.()
                 } in
                 let {
                   lvl151 :: (Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                     eta74
                 } in
                 let {
                   lvl152 :: Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl151
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl153 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl152
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 (\ (eta75 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta76 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta76, lvl153 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.App>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
9528703ef480c8a5387e033e225815bd
  getFuncionarioR35 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta73 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Funcionario.getFuncionarioR36 eta73) -}
80c65bcdeb081d58ea4fbf402bf307b8
  getFuncionarioR36 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handler.Funcionario.getFuncionarioR_eta4)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
b192bc45149d5e15a64935a5180fa463
  getFuncionarioR37 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioR38) -}
852d967c5a824ad3fe6e9b17a6b2cc00
  getFuncionarioR38 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioR39) -}
5dc81dabc504b66c5ef998537a13766d
  getFuncionarioR39 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"cadastrar\">\n\
                   \<br><br></br>\n\
                   \<a class=\"btn btn-primary btn-sm active\" href=\""#) -}
71fe67d47412dbd099d9392516cb6110
  getFuncionarioR4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text) ->
                         Handler.Funcionario.getFuncionarioR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
7e7b3f2fb66b8652f0461fb6f0552b5c
  getFuncionarioR40 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO (GHC.Base.Maybe Text.Blaze.Html.Html)
  {- Unfolding: (Yesod.Core.Handler.getMessage
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)) -}
14e7fdb4b9da23c39878db14f08ffc4c
  getFuncionarioR41 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ (Model.Funcionario, Data.Text.Internal.Text)
                   @ Foundation.Widget
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Funcionario.formFuncionario1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult
                                        (Model.Funcionario, Data.Text.Internal.Text)>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.App>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
95d9b06f463e52b0d3043d7ea2a19eb5
  getFuncionarioR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.getFuncionarioR6) -}
94adefe2c1e540cdc1f13c2e29506bcb
  getFuncionarioR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.getFuncionarioR7) -}
90c32d757fd4e19242f2821ea78e4286
  getFuncionarioR7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<form action=\""#) -}
7a587c3c42d20b737c4b8f3795909620
  getFuncionarioR8 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.Funcionario.getFuncionarioPerfilR19
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.App>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                               <GHC.Types.IO>_N <Foundation.App>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.Funcionario.getFuncionarioR9) -}
4d5e5f84fd64e9872f0ad87cef92892e
  getFuncionarioR9 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ (urender :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 let {
                   eta72 :: Data.Text.Internal.Text
                   = urender
                       Foundation.FuncionarioR `cast` (Sym (Foundation.D:R:RouteApp0[0]))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta73 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta72
                 } in
                 let {
                   eta74 :: Text.Blaze.Html.Html
                   = Text.Blaze.Internal.Content @ () eta73 GHC.Tuple.()
                 } in
                 let {
                   lvl151 :: (Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ (ds3 :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                     eta74
                 } in
                 let {
                   lvl152 :: Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl151
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl153 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl152
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 (\ (eta75 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta76 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta76, lvl153 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.App>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
948e8ff720c06179dcfc7051c7072b83
  getFuncionarioR_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioR5
                   GHC.Tuple.()) -}
b3533dd89d17276e5d5c2d1b2757343b
  getFuncionarioR_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioR12
                   GHC.Tuple.()) -}
d40fb7d28596696949a188dcf43b17de
  getFuncionarioR_eta2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioR23
                   GHC.Tuple.()) -}
c6c3f851bc8ab960bb621515b624e23c
  getFuncionarioR_eta3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioR30
                   GHC.Tuple.()) -}
46b25127a4686d7c7d8f19015cdbbd96
  getFuncionarioR_eta4 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.getFuncionarioR37
                   GHC.Tuple.()) -}
6cee3284ee0afce9e99dfdf686c0ec9b
  getTodosFuncionariosR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.getTodosFuncionariosR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
585187a93e9ae6fc0d799aa2ac1175ce
  getTodosFuncionariosR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
c13a63a387c51548ded1a11d00c162c4
  postFuncionarioAlteraR ::
    Model.FuncionarioId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (funcid :: Model.FuncionarioId) ->
                 let {
                   ds3 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.Internal.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                            Model.Funcionario
                   = Handler.Funcionario.getFuncionarioPerfilR25 funcid
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case Foundation.$fYesodPersistApp1
                         @ Model.Funcionario
                         ds3
                           `cast`
                         (Control.Monad.Trans.Reader.ReaderT
                            <*>_N
                            (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                            <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                            <Model.Funcionario>_N)_R
                         r
                         s of ds4 { (#,#) ipv ipv1 ->
                  case ((Yesod.Form.Functions.postEnv
                           @ Foundation.Handler
                           (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App))
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N
                             <GHC.Types.IO>_N
                             <GHC.Base.Maybe
                                (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)>_R)
                         ipv of ds5 { (#,#) ipv2 ipv3 ->
                  case ((Yesod.Form.Functions.postHelper
                           @ Foundation.Handler
                           @ Model.Funcionario
                           @ Foundation.Widget
                           (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                           Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                             `cast`
                           (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                     (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                          <GHC.Types.IO>_N <Foundation.App>_N)
                                     <Yesod.Form.Types.FormMessage>_N))
                           (Handler.Funcionario.formFuncionarioAlt1
                              (GHC.Base.Just @ Model.Funcionario ipv1))
                             `cast`
                           (<Text.Blaze.Html.Html>_R
                            ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                          <(GHC.Base.Maybe
                                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                            [Text.Shakespeare.I18N.Lang])>_R
                                          <Yesod.Form.Types.Enctype>_N
                                          <Yesod.Form.Types.Ints>_N
                                          <Foundation.Handler>_R
                                          ((,)
                                             <Yesod.Form.Types.FormResult Model.Funcionario>_N
                                             (Yesod.Core.Types.WidgetT
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                          <GHC.Types.IO>_N <Foundation.App>_N))
                                                <GHC.Types.IO>_N
                                                <()>_N)_N)_N))
                           ipv3)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N
                             <GHC.Types.IO>_N
                             <((Yesod.Form.Types.FormResult Model.Funcionario,
                                Foundation.Widget),
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <((Yesod.Form.Types.FormResult Model.Funcionario,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_R)
                         ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                  case ipv5 of wild { (,) ds7 ds8 ->
                  case ds7 of wild1 { (,) res ds9 ->
                  case res of wild2 {
                    DEFAULT
                    -> (Handler.Funcionario.postFuncionarioAlteraR3
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                         ipv4
                    Yesod.Form.Types.FormSuccess funcionarioNovo
                    -> case ((Handler.Funcionario.postFuncionarioAlteraR2
                                (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$creplace
                                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                                   @ Model.Funcionario
                                   (Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                                      @ Foundation.App)
                                   Handler.Funcionario.getFuncionarioPerfilR26
                                     `cast`
                                   (GHC.Classes.(%,%)
                                      <Database.Persist.Class.PersistEntity.PersistEntity
                                         Model.Funcionario>_N
                                      ((Data.Type.Equality.~)
                                         <*>_N
                                         (Sym (Model.D:R:PersistEntityBackendFuncionario[0]))
                                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                   funcid
                                   funcionarioNovo)
                                  `cast`
                                (Control.Monad.Trans.Reader.ReaderT
                                   <*>_N
                                   (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <()>_N)_R)
                               `cast`
                             (Yesod.Core.Types.N:HandlerT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                               r)
                              `cast`
                            (GHC.Types.N:IO[0] <()>_R)
                              ipv4 of ds10 { (#,#) ipv6 ipv7 ->
                       (Handler.Funcionario.postFuncionarioAlteraR1
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                         ipv6 } } } } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)))) -}
45ec7011c95e1c890e058c45d9dc8364
  postFuncionarioAlteraR1 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   @ Text.Blaze.Html.Html
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.App)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Routes.Class.Route Foundation.App>_N))
                   Foundation.TodosFuncionariosR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
9409872e9e65f8ff36622dabcb6beb86
  postFuncionarioAlteraR2 ::
    Yesod.Persist.Core.YesodDB Foundation.App ()
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO ()
  {- Unfolding: (GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Yesod.Persist.Core.YesodDB Foundation.App ())
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO ())
                   (Foundation.$fYesodPersistApp1 @ ())
                     `cast`
                   (<Yesod.Persist.Core.YesodDB Foundation.App ()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                             (Sym (Yesod.Core.Types.N:HandlerT[0]
                                       <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
53c10f9e3d89c3c11503a5de55fc2d2c
  postFuncionarioAlteraR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   @ Text.Blaze.Html.Html
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.App)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Routes.Class.Route Foundation.App>_N))
                   Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
84fe7302138243dcbca032296c5dc196
  postFuncionarioApagarR ::
    Model.FuncionarioId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (funcid :: Model.FuncionarioId) ->
                 let {
                   ds3 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO ()
                   = Handler.Funcionario.postFuncionarioAlteraR2
                       (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cdelete
                          @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                          @ Model.Funcionario
                          (Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                             @ Foundation.App)
                          Handler.Funcionario.getFuncionarioPerfilR26
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistEntity.PersistEntity
                                Model.Funcionario>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Model.D:R:PersistEntityBackendFuncionario[0]))
                                (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                          funcid)
                         `cast`
                       (Control.Monad.Trans.Reader.ReaderT
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                          <()>_N)_R
                 } in
                 let {
                   ds4 :: Yesod.Core.Types.HandlerT
                            Foundation.App GHC.Types.IO Model.Funcionario
                   = Handler.Funcionario.postFuncionarioApagarR1
                       (Handler.Funcionario.getFuncionarioPerfilR25 funcid)
                         `cast`
                       (Control.Monad.Trans.Reader.ReaderT
                          <*>_N
                          (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                          <Model.Funcionario>_N)_R
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds4
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <Model.Funcionario>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0] <Model.Funcionario>_R)
                         s of ds5 { (#,#) ipv ipv1 ->
                  case (ds3
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0] <()>_R)
                         ipv of ds6 { (#,#) ipv2 ipv3 ->
                  (Handler.Funcionario.postFuncionarioAlteraR1
                     `cast`
                   (Yesod.Core.Types.N:HandlerT[0]
                        <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     r)
                    `cast`
                  (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv2 } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)))) -}
344c0b648280495a75868aa2c7bc5c46
  postFuncionarioApagarR1 ::
    Yesod.Persist.Core.YesodDB Foundation.App Model.Funcionario
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Model.Funcionario
  {- Unfolding: (GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Yesod.Persist.Core.YesodDB Foundation.App Model.Funcionario)
                   @ (Yesod.Core.Types.HandlerT
                        Foundation.App GHC.Types.IO Model.Funcionario)
                   (Foundation.$fYesodPersistApp1 @ Model.Funcionario)
                     `cast`
                   (<Yesod.Persist.Core.YesodDB Foundation.App Model.Funcionario>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Model.Funcionario>_R))
                             (Sym (Yesod.Core.Types.N:HandlerT[0]
                                       <Foundation.App>_N
                                       <GHC.Types.IO>_N
                                       <Model.Funcionario>_N)))) -}
d01c5e6dc2b432ddec1a74a2a9889ce7
  postFuncionarioR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Funcionario.postFuncionarioR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
7e4ddd9b00d82c3760d9149bce6c32e8
  postFuncionarioR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Funcionario.postFuncionarioR9
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult
                                 (Model.Funcionario, Data.Text.Internal.Text),
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult
                                (Model.Funcionario, Data.Text.Internal.Text),
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds3 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds4 ds5 ->
                 case ds4 of wild1 { (,) res ds6 ->
                 case res of wild2 {
                   DEFAULT
                   -> (Handler.Funcionario.postFuncionarioAlteraR3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess ds7
                   -> case ds7 of wild3 { (,) funcionario confirmacao ->
                      case funcionario of wild4 { Model.Funcionario ds8 ds9 ->
                      case ds9 of wild5 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case confirmacao of wild6 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# dt2 dt5) of wild7 {
                        GHC.Types.False -> Handler.Funcionario.postFuncionarioR4 r ipv
                        GHC.Types.True
                        -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                              -> GHC.Prim.Word#
                                                                                                              -> GHC.Prim.ByteArray#
                                                                                                              -> GHC.Prim.Word#
                                                                                                              -> GHC.Prim.Word#
                                                                                                              -> GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld
                                                                                                              -> (# GHC.Prim.State#
                                                                                                                      GHC.Prim.RealWorld,
                                                                                                                    GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild8 { (#,#) ds11 ds12 ->
                           case GHC.Prim.narrow32Int# ds12 of wild9 {
                             DEFAULT -> Handler.Funcionario.postFuncionarioR4 r ipv
                             0#
                             -> case ((Handler.Funcionario.postFuncionarioR3
                                         (Handler.Funcionario.postFuncionarioR2 wild4)
                                           `cast`
                                         (Control.Monad.Trans.Reader.ReaderT
                                            <*>_N
                                            (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                                            <Yesod.Core.Types.HandlerT
                                               Foundation.App GHC.Types.IO>_R
                                            <Database.Persist.Class.PersistEntity.Key
                                               Model.Funcionario>_N)_R)
                                        `cast`
                                      (Yesod.Core.Types.N:HandlerT[0]
                                           <Foundation.App>_N
                                           <GHC.Types.IO>_N
                                           <Database.Persist.Class.PersistEntity.Key
                                              Model.Funcionario>_N)
                                        r)
                                       `cast`
                                     (GHC.Types.N:IO[0]
                                          <Database.Persist.Class.PersistEntity.Key
                                             Model.Funcionario>_R)
                                       ipv of ds10 { (#,#) ipv2 ipv3 ->
                                (Handler.Funcionario.postFuncionarioAlteraR3
                                   `cast`
                                 (Yesod.Core.Types.N:HandlerT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                                   r)
                                  `cast`
                                (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                                  ipv2 } } } } } } } } } } } }) -}
40632ddc8136486d861082398e48af6d
  postFuncionarioR2 ::
    Model.Funcionario
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Model.Funcionario)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Model.Funcionario
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.App)
                   Handler.Funcionario.getFuncionarioPerfilR26
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Model.Funcionario>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendFuncionario[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
7bcfa3560d14a402b15fcbe7a127761e
  postFuncionarioR3 ::
    Yesod.Persist.Core.YesodDB
      Foundation.App
      (Database.Persist.Class.PersistEntity.Key Model.Funcionario)
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Database.Persist.Class.PersistEntity.Key Model.Funcionario)
  {- Unfolding: (GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (Yesod.Persist.Core.YesodDB
                        Foundation.App
                        (Database.Persist.Class.PersistEntity.Key Model.Funcionario))
                   @ (Yesod.Core.Types.HandlerT
                        Foundation.App
                        GHC.Types.IO
                        (Database.Persist.Class.PersistEntity.Key Model.Funcionario))
                   (Foundation.$fYesodPersistApp1
                      @ (Database.Persist.Class.PersistEntity.Key Model.Funcionario))
                     `cast`
                   (<Yesod.Persist.Core.YesodDB
                       Foundation.App
                       (Database.Persist.Class.PersistEntity.Key Model.Funcionario)>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Database.Persist.Class.PersistEntity.Key
                                               Model.Funcionario>_R))
                             (Sym (Yesod.Core.Types.N:HandlerT[0]
                                       <Foundation.App>_N
                                       <GHC.Types.IO>_N
                                       <Database.Persist.Class.PersistEntity.Key
                                          Model.Funcionario>_N)))) -}
e18432dacc8c98d478c84e5d7b932319
  postFuncionarioR4 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta72 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Funcionario.postFuncionarioR_m1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <()>_N)
                         eta72)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds3 { (#,#) ipv ipv1 ->
                 (Handler.Funcionario.postFuncionarioR_k
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    eta72)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
e92e6c8cd9c5747fa351074cd46b80dc
  postFuncionarioR5 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Funcionario.postFuncionarioR6
                   GHC.Tuple.()) -}
965fd466a0b9793b0994be653c5b415a
  postFuncionarioR6 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Funcionario.postFuncionarioR7) -}
37a75db2cd4d70169be729299460cbe3
  postFuncionarioR7 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.Text
                   Handler.Funcionario.postFuncionarioR8) -}
2e26d9c3084ffbb6712eb1dce1aba376
  postFuncionarioR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h2> Usuario e senha nao batem</h2>\n"#) -}
940d71e2caee2f3a70d010c8b15e0a43
  postFuncionarioR9 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult
          (Model.Funcionario, Data.Text.Internal.Text),
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ (Model.Funcionario, Data.Text.Internal.Text)
                   @ Foundation.Widget
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handler.Funcionario.$s$fMonadResourceHandlerT @ Foundation.App)
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Funcionario.formFuncionario1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult
                                        (Model.Funcionario, Data.Text.Internal.Text)>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.App>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
ea345e87568f3f27993b89d1bbb42699
  postFuncionarioR_k ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   @ Text.Blaze.Html.Html
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.App)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Routes.Class.Route Foundation.App>_N))
                   Foundation.FuncionarioR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
341d6ab53e9ab277d569577e2d44c2b5
  postFuncionarioR_m1 ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Handler.addMessage
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Funcionario.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Data.Text.Internal.empty_
                   Handler.Funcionario.postFuncionarioR5) -}
"SPEC/Handler.Funcionario $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Handler.Funcionario.$s$fApplicativeHandlerT @ site
"SPEC/Handler.Funcionario $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonad :: GHC.Base.Monad
                                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Handler.Funcionario.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Handler.Funcionario $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                                    ($dMonad :: GHC.Base.Monad
                                                                                  GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Handler.Funcionario.$s$fApplicativeHandlerT_$s$fFunctorHandlerT
      @ site
"SPEC/Handler.Funcionario $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Handler.Funcionario.$s$fMonadBasebHandlerT @ site
"SPEC/Handler.Funcionario $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                       ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                         GHC.Types.IO
                                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Handler.Funcionario $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                          ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                            GHC.Types.IO
                                                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Handler.Funcionario $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                          ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                            GHC.Types.IO
                                                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Handler.Funcionario $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                                         ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                          GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Handler.Funcionario.$s$fMonadHandlerHandlerT @ site
"SPEC/Handler.Funcionario $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Handler.Funcionario $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                                         ($dMonad :: GHC.Base.Monad
                                                                                       GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Handler.Funcionario.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail
      @ site
"SPEC/Handler.Funcionario $fMonadHandlerWidgetT @ IO _" [ALWAYS] forall @ site
                                                                        ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                         GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ GHC.Types.IO
                                                 @ site
                                                 $d(%,,,,%)
  = Handler.Funcionario.$s$fMonadHandlerWidgetT @ site
"SPEC/Handler.Funcionario $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                                    ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                    GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Handler.Funcionario $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                                          ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                             GHC.Types.IO)
                                                                          ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                            GHC.Types.IO
                                                                                            GHC.Types.IO)
                                                                          ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                          GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Handler.Funcionario.$s$fMonadResourceHandlerT @ site
"SPEC/Handler.Funcionario $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                               GHC.Types.IO)
                                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                              GHC.Types.IO
                                                                                                              GHC.Types.IO)
                                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Funcionario.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Handler.Funcionario $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                               GHC.Types.IO)
                                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                              GHC.Types.IO
                                                                                                              GHC.Types.IO)
                                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Funcionario.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Handler.Funcionario $fMonadResourceHandlerT_$cp3MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                               GHC.Types.IO)
                                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                              GHC.Types.IO
                                                                                                              GHC.Types.IO)
                                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp3MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
      @ site
"SPEC/Handler.Funcionario $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                               GHC.Types.IO)
                                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                              GHC.Types.IO
                                                                                                              GHC.Types.IO)
                                                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Funcionario.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Handler.Funcionario $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                                       ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                          GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Handler.Funcionario $fMonadThrowHandlerT_$cp1MonadThrow @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cp1MonadThrow @ GHC.Types.IO
                                                       @ site
                                                       $dMonadThrow
  = Handler.Funcionario.$s$fMonadBasebHandlerT_$s$fMonadThrowHandlerT_$cp1MonadThrow
      @ site
"SPEC/Handler.Funcionario $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                                ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Handler.Funcionario.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
"SPEC/Handler.Funcionario emailField @ Handler" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                                                         Foundation.Handler)
                                                                                      Yesod.Form.Types.FormMessage)
                                                                ($dMonad :: GHC.Base.Monad
                                                                              Foundation.Handler)
  Yesod.Form.Fields.emailField @ (Yesod.Core.Types.HandlerT
                                    Foundation.App GHC.Types.IO)
                               $dMonad
                               $dRenderMessage
  = Handler.Funcionario.$semailField
"SPEC/Handler.Funcionario passwordField @ Handler" [ALWAYS] forall ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                         (Yesod.Core.Class.Handler.HandlerSite
                                                                                            Foundation.Handler)
                                                                                         Yesod.Form.Types.FormMessage)
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Foundation.Handler)
  Yesod.Form.Fields.passwordField @ (Yesod.Core.Types.HandlerT
                                       Foundation.App GHC.Types.IO)
                                  $dMonad
                                  $dRenderMessage
  = Handler.Funcionario.$spasswordField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

