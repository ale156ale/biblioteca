
==================== FINAL INTERFACE ====================
2019-05-26 13:29:36.041408 UTC

interface aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX:Foundation [family instance module] 8002
  interface hash: c4f3e412379ddca4d02060d4c1bbee99
  ABI hash: a47ff83ce66d83f578fbb993956d32f3
  export-list hash: d285bc651cee85985e7c6daa6d581b61
  orphan hash: f1015f16c878df6461b5107a918116ff
  flag hash: 032c0bad24dd9010acdfbd1c36263b26
  sig of: Nothing
  used TH splices: True
  where
exports:
  Foundation.isAdmin
  Foundation.isUser
  Foundation.resourcesApp
  Foundation.App{Foundation.App appConnPool appHttpManager appLogger appSettings appStatic}
  Foundation.Form
  Foundation.Handler
  Foundation.Widget
  Yesod.Routes.Class.Route{Foundation.AdminR Foundation.FaviconR Foundation.FuncionarioAlteraR Foundation.FuncionarioApagarR Foundation.FuncionarioPerfilR Foundation.FuncionarioR Foundation.HomeR Foundation.LoginR Foundation.LogoutR Foundation.RobotsR Foundation.StaticR Foundation.TodosFuncionariosR}
module dependencies: Import.NoFoundation Model Settings
                     Settings.StaticFiles
package dependencies: ReadArgs-1.2.3@ReadArgs-1.2.3-FZlTw1cmwFABXd9Qu17GpK
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      aeson-compat-0.3.6@aeson-compat-0.3.6-HFlClSgXxbU7TMoWqS5Yu4
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-CmDkwNPA51zjuzFcENFZ5
                      asn1-parse-0.9.4@asn1-parse-0.9.4-HSgo3I4Jg5sAQWRFdyScvb
                      asn1-types-0.3.2@asn1-types-0.3.2-Ls8owv2hbTfEqG1LKzBcjy
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-CiauZZhskHA6jYy7CqE2mZ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw
                      basic-prelude-0.6.1.1@basic-prelude-0.6.1.1-888xsTDtS2CGSoHb1JadEF
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      chunked-data-0.3.0@chunked-data-0.3.0-OOunTfArGE2y1nE8RKgW4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-Iep5jMzxM1u3mGzM17Av1H
                      classy-prelude-1.2.0.1@classy-prelude-1.2.0.1-DI7QyZr6dYQLSGY5Zda29N
                      classy-prelude-conduit-1.2.0@classy-prelude-conduit-1.2.0-4VNoIEo9SLt6t7N4PwpkXU
                      classy-prelude-yesod-1.2.0@classy-prelude-yesod-1.2.0-4tCQqVxZHk5JE3z6jrBT3F
                      clientsession-0.9.1.2@clientsession-0.9.1.2-1HgInPlmxWUKWaagfkcDtu
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-CbpWlJJbANPFWzQzUVNtDU
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-7E5s9ndt8OF7NNDH3ifO8K
                      constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cprng-aes-0.6.1@cprng-aes-0.6.1-CtFLLcV33ZSKCmRTVWdrW7
                      crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-JSCTZhqOXgH3EkiMgDwxX
                      crypto-random-0.0.9@crypto-random-0.0.9-381865WP41XFXsmS6fCaFj
                      cryptonite-0.23@cryptonite-0.23-7SwQljDtwztDJ3Fe01tUO9
                      cryptonite-conduit-0.2.0@cryptonite-conduit-0.2.0-LH1qspLlLTXKv70D84KCUO
                      css-text-0.1.2.2@css-text-0.1.2.2-GtPTSZ9vPefILuf2bXZD6W
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      dlist-instances-0.1.1.1@dlist-instances-0.1.1.1-JrfDmjAHlXKJeRjjD0rY07
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml
                      entropy-0.3.8@entropy-0.3.8-14HIw40nRRY968j6AdY1H4
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-7GMVhEi1femFXwSQxV5ynm
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-AT41KDpP9ayH63FPNXWrvF
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-9yHxBE9KmNa1D1xDvn7C4m
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-5MsxxcFsbFW2aX71Hx1I7R
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT
                      lifted-async-0.9.3@lifted-async-0.9.3-1Yr94BjFrURGjFULK2k39c
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-GdBguxykhKWC3gIuWq62O9
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      monad-unlift-0.2.0@monad-unlift-0.2.0-JaCplLBosjYCz9UWF6Saxw
                      mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV
                      mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n
                      persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS
                      pointed-5@pointed-5-GlRizu1aJXO3QG4Xelc8BV
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-7wqiM7f7ESv7wSvmAjfLqt
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-GmoeVeJ8L5Y51jMJ5dPk3U
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      say-0.1.0.0@say-0.1.0.0-4kg0VW7izQr10eu93ritVO
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      securemem-0.1.9@securemem-0.1.9-I1DISfcspndD6idpVbMBWq
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      skein-1.0.9.4@skein-1.0.9.4-H6iwU6ZhWxE28U4xCLTfo3
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-HO0sHb651BeFnnIxljlexR
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-IxCmr8GdEutIrVRgKylzM6
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-IWVzgvpaMYRH5pqRQk33K1
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
                      wai-logger-2.3.0@wai-logger-2.3.0-G2LMsBpHwLV49tDfVWxzX4
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-IixRXIQfpHlXunpaQDNuQ
                      x509-store-1.6.5@x509-store-1.6.5-LPi8AM9vMZO97SZk6SmtWd
                      x509-system-1.6.6@x509-system-1.6.6-GUxFbyk0TndCMp8nKvvL3M
                      x509-validation-1.6.9@x509-validation-1.6.9-4jWSRkWS3kAKZsU0SpJst
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-2Pr735gWMIKE1KECS4SIv1
                      yaml-0.8.23.3@yaml-0.8.23.3-C6ya2ht5lnU5AAyP9utctL
                      yesod-1.4.5@yesod-1.4.5-GDhOBR6sYcs6xIyNy56Max
                      yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V
                      yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU
                      yesod-newsfeed-1.6@yesod-newsfeed-1.6-FVeGFThDxmyHNMY2ecmTrZ
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc
                      yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path.CurrentOS
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX:Model
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Block.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.BoxedArray
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Monad
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.MutableBuilder
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.NonEmpty
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Numerical.Subtractive
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ASCII7
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF16
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF32
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.AsciiString
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.OffsetSize
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UArray.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UTF8.Base
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB:Data.Constraint.Forall
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml:Text.Email.Parser
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Bitmap
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Buildable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Element
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Keyed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Mutable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT:Data.Key
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et:Control.Monad.Logger
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Containers
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.MonoTraversable
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.NonNull
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Sequences
                         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.BRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Class
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.DLList
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Deque
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.PRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.SRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.URef
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistConfig
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Internal.Css
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Handler
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types
                         yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  Import.NoFoundation 2b4431e33f8f44b8914d056f627513cf
  exports: afba9c46cc8f4f7b548b328684a172f0
import  -/  Model 0322a236513b611476018acb9209b978
  FuncionarioId 438cc7778c47cd631a17e7ac095de822
import  -/  Settings 0f8bbb6df9df8001dfa1e9ea64b738dc
  AppSettings fe2d54064e512d0ed5ffbd1b8523809c
import  -/  base-4.9.1.0:Control.Category 74288f70105bf6db5ff51d18c3e2c349
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Text.ParserCombinators.ReadPrec 5a182a8d6deb0f7d67aed5fab08a5cc0
import  -/  base-4.9.1.0:Text.Read.Lex 16199fac3c6c2d64cc7c268f3c0d2269
import  -/  blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p:Text.Blaze.Html 835f81951872bd48727588c57b8222c5
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base 192db525847d66243089501d3ee84714
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Types 3a50d3b18de4f434ed7bb6cc70d2d727
import  -/  path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5:Web.PathPieces cf96b7878e0fca4afda92e7ea989ff12
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql 8a5f16f2604b86b6eac22fdfa56f00cd
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Run 3cfe30c472653328c79c3e64264c0de7
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types d1468ed1aee3c19bb74284007c274b2b
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal fd02661b59f7487577229666ddcf6f7f
import  -/  shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare.I18N 676ecb91dd2b93e5b4e9a775bea3be42
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text e8aa34be3dde178f567ae461e65c988b
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 9bfcbbbe07ecef48f631025a838df7da
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Yesod 671521227b842a05ae6b4e758829bb55
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Handler 5eeae0813494c783beb7f9babd90b06a
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.TH b2e43c7d5c29a2c36c8e1c2bdf663dbe
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types 0b39941269d824c929136a6524eb02b4
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Routes.Class 1402a53c0596ce6914d771c3b52c0c4f
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Routes.Parse d73f5b7ce46bd9085ca65eee703f3f82
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Routes.TH.Types d348c3761bf77782e7f91302eb1a3df3
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Fields b5e68f93ddc4541a22fa5732e45437b7
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Types 6142851bc08ab837886ac4418c1d15a5
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc:Yesod.Persist.Core e6c69656dbdff229818a75455816a39b
import  -/  yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static e8f90c76bf5b168d668c933b381656c3
addDependentFile "config/routes"
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fEqRoute ::
    GHC.Classes.Eq (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fEqRoute_$c==
                  Foundation.$fEqRoute_$c/= -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fEqRoute_$c/= ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Yesod.Routes.Class.Route Foundation.App)
                   (b :: Yesod.Routes.Class.Route Foundation.App) ->
                 case Foundation.$fEqRoute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fEqRoute_$c== ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.StaticR b1 -> Yesod.Static.$fEqRoute_$c== a1 b1 }
                   Foundation.FaviconR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.FaviconR -> GHC.Types.True }
                   Foundation.RobotsR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.RobotsR -> GHC.Types.True }
                   Foundation.HomeR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.HomeR -> GHC.Types.True }
                   Foundation.FuncionarioR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.FuncionarioR -> GHC.Types.True }
                   Foundation.TodosFuncionariosR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.TodosFuncionariosR -> GHC.Types.True }
                   Foundation.FuncionarioPerfilR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.FuncionarioPerfilR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Model.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Model.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.FuncionarioApagarR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.FuncionarioApagarR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Model.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Model.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.FuncionarioAlteraR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.FuncionarioAlteraR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Model.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Model.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.LoginR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.LoginR -> GHC.Types.True }
                   Foundation.LogoutR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False Foundation.LogoutR -> GHC.Types.True }
                   Foundation.AdminR
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foundation.AdminR -> GHC.Types.True } }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fHasHttpManagerApp ::
    Network.HTTP.Client.Types.HasHttpManager Foundation.App
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.appHttpManager
                  `cast`
                (Sym (Network.HTTP.Client.Types.N:HasHttpManager[0]
                          <Foundation.App>_N)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fParseRouteApp :: Yesod.Routes.Class.ParseRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fParseRouteApp_$cparseRoute -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fParseRouteApp_$cparseRoute ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([Data.Text.Internal.Text],
                          [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) ->
                 case w of ww { (,) ww1 ww2 ->
                 Foundation.$w$cparseRoute ww1 ww2 }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute ::
    GHC.Read.Read (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fReadRoute_$creadsPrec
                  Foundation.$fReadRoute_$creadList
                  Foundation.$fReadRoute_$creadPrec
                  Foundation.$fReadRoute_$creadListPrec -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Yesod.Routes.Class.Route Foundation.App]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Yesod.Routes.Class.Route Foundation.App]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   eta
                   @ b
                   eta1) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute10 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional3
                           11#
                           @ b1
                           (\ (a1 :: Yesod.Routes.Class.Route Yesod.Static.Static) ->
                            k1
                              (Foundation.StaticR a1) `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute11 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
e4d816451064a9eef99295c1a0c1512e
  $fReadRoute11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute12 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute41
                   Foundation.$fReadRoute13) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute13 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute38
                   Foundation.$fReadRoute14) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute14 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute35
                   Foundation.$fReadRoute15) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute15 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute32
                   Foundation.$fReadRoute16) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute16 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute29
                   Foundation.$fReadRoute17) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute17 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute26
                   Foundation.$fReadRoute18) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute18 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute23
                   Foundation.$fReadRoute19) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute19 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute20
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           (Yesod.Routes.Class.Route Foundation.App)))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute20 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute22,
                  Foundation.$fReadRoute21
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute21 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.AdminR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
ecf4f4433ce2f027f53ae1b1affba386
  $fReadRoute22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AdminR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute23 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute25,
                  Foundation.$fReadRoute24
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute24 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LogoutR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
64ee05ff0e8dbad6369196c47363319d
  $fReadRoute25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LogoutR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute26 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute28,
                  Foundation.$fReadRoute27
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute27 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
dbc54d8d5e0d9e2e15cb297af7d8a135
  $fReadRoute28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LoginR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute29 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute31,
                  Foundation.$fReadRoute30
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (n :: Text.ParserCombinators.ReadPrec.Prec) ->
                 let {
                   ds2 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = GHC.Read.choose2
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute12
                       n
                 } in
                 let {
                   ds1 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute10
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds3 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute8
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds4 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute6
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds5 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute4
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 (\ @ b
                    (k :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b) ->
                  Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                    @ b
                    (ds2
                       `cast`
                     (Text.ParserCombinators.ReadP.N:ReadP[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)
                       @ b
                       k)
                    (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                       @ b
                       (ds1
                          `cast`
                        (Text.ParserCombinators.ReadP.N:ReadP[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R)
                          @ b
                          k)
                       (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                          @ b
                          (ds3
                             `cast`
                           (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <Yesod.Routes.Class.Route Foundation.App>_R)
                             @ b
                             k)
                          (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                             @ b
                             (ds4
                                `cast`
                              (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Yesod.Routes.Class.Route Foundation.App>_R)
                                @ b
                                k)
                             (ds5
                                `cast`
                              (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Yesod.Routes.Class.Route Foundation.App>_R)
                                @ b
                                k)))))
                   `cast`
                 (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                           <Yesod.Routes.Class.Route Foundation.App>_R))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute30 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.TodosFuncionariosR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
f64f076e32cd8372728e77fa3151b6e8
  $fReadRoute31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TodosFuncionariosR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute32 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute34,
                  Foundation.$fReadRoute33
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute33 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.FuncionarioR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
52e2445c32dc2019f8f9e3bf1f0f0482
  $fReadRoute34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute35 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute37,
                  Foundation.$fReadRoute36
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute36 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
ad035acc8b3779fd9ea031e577f8335e
  $fReadRoute37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HomeR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute38 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute40,
                  Foundation.$fReadRoute39
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute39 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.RobotsR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute4 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional
                           11#
                           @ b1
                           (\ (a1 :: Model.FuncionarioId) ->
                            k1
                              (Foundation.FuncionarioAlteraR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
67cb424c838c286aea99de0d0e228156
  $fReadRoute40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RobotsR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute41 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute43,
                  Foundation.$fReadRoute42
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute42 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.FaviconR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
fd7f83294d000513f0c11611eda1b466
  $fReadRoute43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FaviconR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute44 ::
    Text.ParserCombinators.ReadP.P
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: (GHC.Read.list1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   GHC.Read.$fRead()5
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Yesod.Routes.Class.Route Foundation.App])) -}
52b04a39c61756e385ffa877a4ed933e
  $fReadRoute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioAlteraR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute6 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional1
                           11#
                           @ b1
                           (\ (a1 :: Model.FuncionarioId) ->
                            k1
                              (Foundation.FuncionarioApagarR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute7 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
cef94d653b4ac700d9c5f9d6f17b1a86
  $fReadRoute7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioApagarR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute8 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl81 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl82 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional2
                           11#
                           @ b1
                           (\ (a1 :: Model.FuncionarioId) ->
                            k1
                              (Foundation.FuncionarioPerfilR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute9 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl82 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl81) -}
                   = \ (w4 :: ()) -> lvl81
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
8f20776f0b411afe48e4bda54743ce58
  $fReadRoute9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioPerfilR"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   Foundation.$fReadRoute44) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Yesod.Routes.Class.Route Foundation.App]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Yesod.Routes.Class.Route Foundation.App]>_R))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fReadRoute_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   ((GHC.Read.parens1
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Yesod.Routes.Class.Route Foundation.App>_R)
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Yesod.Routes.Class.Route Foundation.App)))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fRenderMessageAppFormMessage ::
    Text.Shakespeare.I18N.RenderMessage
      Foundation.App Yesod.Form.Types.FormMessage
  DFunId
  {- Arity: 3, Strictness: <L,A><L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                  `cast`
                (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                          <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fRenderMessageAppFormMessage_$crenderMessage ::
    Foundation.App
    -> [Text.Shakespeare.I18N.Lang]
    -> Yesod.Form.Types.FormMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: [Text.Shakespeare.I18N.Lang])
                   (eta :: Yesod.Form.Types.FormMessage) ->
                 Yesod.Form.I18n.English.englishFormMessage eta) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fRenderRouteApp :: Yesod.Routes.Class.RenderRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fEqRoute
                  Foundation.$fRenderRouteApp_$crenderRoute -}
430f6af696ed1a2eee4ac63eb0df7104
  $fRenderRouteApp1 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp2
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
c7ca3a95c5fe2b61753c65876b0ce0af
  $fRenderRouteApp10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "apagar"#) -}
f3b2c7c85ba6e58134e68beb9c4b3fec
  $fRenderRouteApp11 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp12
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
50e5b21ab05f2b5e28c4a0de3de92f52
  $fRenderRouteApp12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "perfil"#) -}
41cd9a390139a7f69d1fddd88bc7a913
  $fRenderRouteApp13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "funcionario"#) -}
98909c562d119282ada22dcb4145b117
  $fRenderRouteApp14 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp15
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
1f678f60661ddbf1827cea363937a2de
  $fRenderRouteApp15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "funcionarios"#) -}
b98913200e573cf0de5874cd0e88d910
  $fRenderRouteApp16 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp13
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
a2c341f179092ac964c87551fffdf552
  $fRenderRouteApp17 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp18
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
97fe2db3f25b9346d16b0f26c8b3d6aa
  $fRenderRouteApp18 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "robots.txt"#) -}
61ef8cd9e24255521a16886fc72007da
  $fRenderRouteApp19 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp20
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
02b0b11f5d91525648be656e5b5a7d51
  $fRenderRouteApp2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "admin"#) -}
6d6dfd405ea4b6dcc118b88402610cf0
  $fRenderRouteApp20 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "favicon.ico"#) -}
a8cb438bf5157f0ca1889c7cbc629622
  $fRenderRouteApp21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "static"#) -}
35a288ac36d67746d7ca58ff7bbbed36
  $fRenderRouteApp3 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp4
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
ac9d245a6f518e7a404ae22d56274ff1
  $fRenderRouteApp4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "logout"#) -}
473b1dee8877df45e5c8cd485640073c
  $fRenderRouteApp5 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp6
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
79e62a36051f43abedcc0b4f9e2a8d9f
  $fRenderRouteApp6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "login"#) -}
42185360852f1f032d24ed2d42945f4b
  $fRenderRouteApp7 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp8
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
dc219db18b0a2aa7818bd4d4e37b4b0c
  $fRenderRouteApp8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "alterar"#) -}
0df34d1b35e6044bde9feac7c53c700a
  $fRenderRouteApp9 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp10
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fRenderRouteApp_$crenderRoute ::
    Yesod.Routes.Class.Route Foundation.App
    -> ([Data.Text.Internal.Text],
        [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App) ->
                 case w `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR sub
                   -> case sub
                             `cast`
                           (Yesod.Static.D:R:RouteStatic0[0]) of wild1 { Yesod.Static.StaticRoute x2 y ->
                      (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp21
                         x2,
                       y) }
                   Foundation.FaviconR
                   -> (Foundation.$fRenderRouteApp19,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.RobotsR
                   -> (Foundation.$fRenderRouteApp17,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HomeR
                   -> (GHC.Types.[] @ Data.Text.Internal.Text,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FuncionarioR
                   -> (Foundation.$fRenderRouteApp16,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.TodosFuncionariosR
                   -> (Foundation.$fRenderRouteApp14,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FuncionarioPerfilR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp13
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyFuncionario0[0])
                                    (Trans
                                         (Model.N:R:KeyFuncionario[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp11),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FuncionarioApagarR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp13
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyFuncionario0[0])
                                    (Trans
                                         (Model.N:R:KeyFuncionario[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp9),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FuncionarioAlteraR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp13
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyFuncionario0[0])
                                    (Trans
                                         (Model.N:R:KeyFuncionario[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp7),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LoginR
                   -> (Foundation.$fRenderRouteApp5,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LogoutR
                   -> (Foundation.$fRenderRouteApp3,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.AdminR
                   -> (Foundation.$fRenderRouteApp1,
                       GHC.Types.[]
                         @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fRouteAttrsApp :: Yesod.Routes.Class.RouteAttrs Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fRouteAttrsApp_$crouteAttrs -}
f128e7b7120b286e2dc9f8aff18859cf
  $fRouteAttrsApp1 :: Data.Set.Base.Set Data.Text.Internal.Text
  {- Unfolding: (Foundation.$fRouteAttrsApp_$sfromList
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fRouteAttrsApp_$crouteAttrs ::
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds of tpl { DEFAULT -> Foundation.$fRouteAttrsApp1 }) -}
0272a1abf50025e7d3c5c4ebee03e923
  $fRouteAttrsApp_$s$wgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U> -}
8f928c3ae454293b4cb977db1ae0f65b
  $fRouteAttrsApp_$sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Base.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww7 ww6 ww8 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww7 ww6 ww8 of wild2 {
                             DEFAULT
                             -> Foundation.$fRouteAttrsApp_$sgo5
                                  ww7
                                  ww6
                                  ww8
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                             GHC.Types.LT
                             -> Foundation.$fRouteAttrsApp_$s$wgo5
                                  ww7
                                  ww6
                                  ww8
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                                  1# } } } } }) -}
69b9d98777b6260740ab6f43dee97421
  $fRouteAttrsApp_$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U> -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fShowRoute ::
    GHC.Show.Show (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fShowRoute_$cshowsPrec
                  Foundation.$fShowRoute_$cshow
                  Foundation.$fShowRoute_$cshowList -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fShowRoute1 ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Foundation.$fShowRoute_$cshowsPrec
                   Foundation.$fShowRoute2) -}
3a639988cb295ebd6473149a3b250742
  $fShowRoute2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b6bb1e8823406d41624c51e068910db8
  $fShowRoute3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "FuncionarioAlteraR "#) -}
8640f4555641d72c097cb52cd7f2d6c0
  $fShowRoute4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "FuncionarioApagarR "#) -}
6eaabb8fc91f099bf814e6e32c95eace
  $fShowRoute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "FuncionarioPerfilR "#) -}
5920b4cb949c071eb2fbbb7edfaaea9a
  $fShowRoute6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR "#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fShowRoute_$cshow ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Yesod.Routes.Class.Route Foundation.App) ->
                 case x `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute6
                        (case b1
                                `cast`
                              (Yesod.Static.D:R:RouteStatic0[0]) of ww2 { Yesod.Static.StaticRoute ww3 ww4 ->
                         Yesod.Static.$w$cshowsPrec
                           11#
                           ww3
                           ww4
                           (GHC.Types.[] @ GHC.Types.Char) })
                   Foundation.FaviconR -> Foundation.$fReadRoute43
                   Foundation.RobotsR -> Foundation.$fReadRoute40
                   Foundation.HomeR -> Foundation.$fReadRoute37
                   Foundation.FuncionarioR -> Foundation.$fReadRoute34
                   Foundation.TodosFuncionariosR -> Foundation.$fReadRoute31
                   Foundation.FuncionarioPerfilR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute5
                        (Model.$w$cshowsPrec2 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.FuncionarioApagarR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute4
                        (Model.$w$cshowsPrec2 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.FuncionarioAlteraR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute3
                        (Model.$w$cshowsPrec2 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.LoginR -> Foundation.$fReadRoute28
                   Foundation.LogoutR -> Foundation.$fReadRoute25
                   Foundation.AdminR -> Foundation.$fReadRoute22 }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fShowRoute_$cshowList ::
    [Yesod.Routes.Class.Route Foundation.App] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fShowRoute1) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fShowRoute_$cshowsPrec ::
    GHC.Types.Int
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp :: Yesod.Core.Class.Yesod.Yesod Foundation.App
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fYesodApp_$s$dmapproot
                  Foundation.$fYesodApp_$cerrorHandler
                  Foundation.$fYesodApp_$cdefaultLayout
                  Foundation.$fYesodApp_$s$dmurlRenderOverride
                  Foundation.$fYesodApp_$curlParamRenderOverride
                  Foundation.$fYesodApp_$cisAuthorized
                  Foundation.$fYesodApp_$cisWriteRequest
                  Foundation.$fYesodApp_$cauthRoute
                  Foundation.$fYesodApp_$ccleanPath
                  Foundation.$fYesodApp_$cjoinPath
                  Foundation.$fYesodApp_$caddStaticContent
                  Foundation.$fYesodApp_$s$dmmaximumContentLength
                  Foundation.$fYesodApp_$cmakeLogger
                  Foundation.$fYesodApp_$cmessageLoggerSource
                  Foundation.$fYesodApp_$s$dmjsLoader
                  Foundation.$fYesodApp_$s$dmjsAttributes
                  Foundation.$fYesodApp_$cmakeSessionBackend
                  Foundation.$fYesodApp_$cfileUpload
                  Foundation.$fYesodApp_$s$dmshouldLog
                  Foundation.$fYesodApp_$cshouldLogIO
                  Foundation.$fYesodApp_$cyesodMiddleware
                  Foundation.$fYesodApp_$cyesodWithInternalState
                  Foundation.$fYesodApp_$cdefaultMessageWidget -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp1 ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 3, Strictness: <L,U><L,C(U)><L,U>,
     Unfolding: (\ (title :: Text.Blaze.Html.Html)
                   (body :: Text.Hamlet.HtmlUrl
                              (Yesod.Routes.Class.Route Foundation.App))
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 let {
                   lvl79 :: Text.Hamlet.Render
                              (Yesod.Routes.Class.Route Foundation.App)
                            -> Text.Blaze.Internal.MarkupM ()
                     {- Arity: 1 -}
                   = \ (_render :: Text.Hamlet.Render
                                     (Yesod.Routes.Class.Route Foundation.App)) ->
                     Text.Blaze.Internal.Append
                       @ ()
                       @ ()
                       Foundation.$fYesodApp6
                       (Text.Blaze.Internal.Append
                          @ ()
                          @ ()
                          title
                          (Text.Blaze.Internal.Append
                             @ ()
                             @ ()
                             Foundation.$fYesodApp2
                             (body _render)))
                 } in
                 let {
                   lvl80 :: Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl79
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl81 :: ((),
                             Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl80
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   (\ (eta1 :: Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                      (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# eta2,
                       (GHC.Tuple.(),
                        Yesod.Core.Types.GWData
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                            `cast`
                          (Sym (Yesod.Core.Types.N:Body[0]
                                    <Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO))>_R))
                          (GHC.Base.Just
                             @ Yesod.Core.Types.Title
                             title `cast` (Sym (Yesod.Core.Types.N:Title[0])))
                            `cast`
                          (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Script
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                            `cast`
                          (Sym (Yesod.Core.Types.N:UniqueList[0]
                                    <Yesod.Core.Types.Script
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))>_R))
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Stylesheet
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                            `cast`
                          (Sym (Yesod.Core.Types.N:UniqueList[0]
                                    <Yesod.Core.Types.Stylesheet
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))>_R))
                          (Data.Map.Base.Tip
                             @ (GHC.Base.Maybe Data.Text.Internal.Text)
                             @ ((Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Data.Text.Internal.Builder.Builder))
                          (GHC.Base.Nothing
                             @ ((Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Text.Julius.Javascript))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                            `cast`
                          (Sym (Yesod.Core.Types.N:Head[0]
                                    <Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO))>_R))) #))
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.App>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   (\ (ds :: ())
                      (eta1 :: Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                      (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# eta2, lvl81 #))
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.App>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp10 ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ res
                   (w :: Yesod.Core.Content.ToTypedContent res)
                   (w1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res)
                   (w2 :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Yesod.Core.Types.HandlerData ww1 ww2 ww3 ww4 ww6 ->
                 Foundation.$w$cyesodMiddleware
                   @ res
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   w3 }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp11 ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (a :: Foundation.App)
                   (b :: Control.Monad.Logger.LogSource)
                   (c :: Control.Monad.Logger.LogLevel)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta2, Yesod.Core.Class.Yesod.defaultShouldLog b c #)) -}
296f4aee162b2ec20794854e30b8ce6d
  $fYesodApp12 :: Yesod.Core.Types.FileUpload
  {- Strictness: m1,
     Unfolding: (Yesod.Core.Types.FileUploadMemory
                   Foundation.$fYesodApp13) -}
6270560f33d5844477bc88bd6048b29f
  $fYesodApp13 ::
    Data.ByteString.Internal.ByteString
    -> Network.Wai.Parse.FileInfo ()
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Network.Wai.Parse.FileInfo ())
                   (w3 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 Network.Wai.Parse.$wlbsBackEnd
                   @ GHC.Types.IO
                   @ Data.ByteString.Internal.ByteString
                   @ (Network.Wai.Parse.FileInfo ())
                   GHC.Base.$fMonadIO
                   w3) -}
df3b68a6ae47b6b90a36bed505241d5f
  $fYesodApp14 :: Yesod.Core.Types.FileUpload
  {- Strictness: m2,
     Unfolding: (Yesod.Core.Types.FileUploadDisk
                   (Network.Wai.Parse.tempFileBackEnd1
                      @ (Network.Wai.Parse.FileInfo ())
                      @ Data.ByteString.Internal.ByteString)
                     `cast`
                   (<Control.Monad.Trans.Resource.InternalState>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <Network.Wai.Parse.FileInfo ()>_R
                    ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp15 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmakeSessionBackend w1) -}
c8fdf0d647c79110f8b8808086bd073b
  $fYesodApp16 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7200000000000000) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp17 ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Yesod.Core.Types.Logger)
                   (w2 :: Language.Haskell.TH.Syntax.Loc)
                   (w3 :: Control.Monad.Logger.LogSource)
                   (w4 :: Control.Monad.Logger.LogLevel)
                   (w5 :: System.Log.FastLogger.LogStr.LogStr)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmessageLoggerSource w1 w2 w3 w4 w5 w6) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp18 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.Logger #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x of wild { Foundation.App ds ds1 ds2 ds3 ds4 -> ds4 } #)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp19 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (5, True, True)
                (\ (ds :: Data.Text.Internal.Text)
                   (ds1 :: Data.Text.Internal.Text)
                   (ds2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (eta2 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta3,
                    GHC.Base.Nothing
                      @ (Data.Either.Either
                           Data.Text.Internal.Text
                           (Yesod.Routes.Class.Route Foundation.App,
                            [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)) -}
f905b69de14dc199cad7e98ac114af74
  $fYesodApp2 :: Text.Blaze.Internal.Markup
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp3
                   GHC.Tuple.()) -}
3c53015ed88e1328959148cd008c2061
  $fYesodApp20 ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (Data.ByteString.Internal.ByteString,
        GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Arity: 1,
     Unfolding: (\ (ds :: (Data.Text.Internal.Text,
                           Data.Text.Internal.Text)) ->
                 (case ds of wild { (,) x y -> Data.Text.Encoding.encodeUtf8 x },
                  case ds of wild { (,) x y ->
                  case y of wild1 { Data.Text.Internal.Text dt1 dt2 dt3 ->
                  case Data.Text.Internal.empty_ of wild2 { Data.Text.Internal.Text dt4 dt5 dt6 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.==# dt3 dt6) of wild3 {
                    GHC.Types.False
                    -> GHC.Base.Just
                         @ Data.ByteString.Internal.ByteString
                         (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                    GHC.Types.True
                    -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                GHC.Prim.Int# #)}
                              dt1
                              (GHC.Prim.int2Word# dt2)
                              dt4
                              (GHC.Prim.int2Word# dt5)
                              (GHC.Prim.int2Word# dt3)
                              GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                       case GHC.Prim.narrow32Int# ds12 of wild5 {
                         DEFAULT
                         -> GHC.Base.Just
                              @ Data.ByteString.Internal.ByteString
                              (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                         0#
                         -> GHC.Base.Nothing
                              @ Data.ByteString.Internal.ByteString } } } } } })) -}
d5abc1fd7794c1f31b1975cc5d344a81
  $fYesodApp21 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1 -}
19d8493141264a20d7a5fd8fb15e693f
  $fYesodApp22 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Data.Text.Internal.empty_
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
54a80f21afb3de3181aa3a5976f21cc3
  $fYesodApp23 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1,
     Unfolding: (\ (t :: Data.Text.Internal.Text) ->
                 case t of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                 } in
                 letrec {
                   $wloop_all :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                 DEFAULT -> GHC.Types.False '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           dt
                                           (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                    case GHC.Prim.chr#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.uncheckedIShiftL#
                                                    (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                    10#)
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                              65536#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 2#) } } } } }
                       GHC.Types.True -> GHC.Types.True }
                 } in
                 case $wloop_all dt1 of wild1 {
                   GHC.Types.False -> wild
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# 1# dt2) of wild3 {
                        GHC.Types.False
                        -> case Data.Text.$witerN
                                  Foundation.$fYesodApp24
                                  dt
                                  dt1
                                  dt2 of ww4 { DEFAULT ->
                           case GHC.Prim.-# dt2 ww4 of wild5 {
                             DEFAULT -> Data.Text.Internal.Text dt (GHC.Prim.+# dt1 ww4) wild5
                             0# -> Data.Text.Internal.empty } }
                        GHC.Types.True -> Data.Text.Internal.empty } } }) -}
5a6d7f85a78717538bd7a8336c7a57ca
  $fYesodApp24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
f6d75ccbad45c461be9f06e2c462b472
  $fYesodApp25 :: Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Text.Internal.Text) ->
                 case x of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt2 0#) of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp26 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp27 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp36
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <Network.Wai.Internal.Request>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Network.Wai.Internal.Request>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case GHC.List.elem
                           @ Network.HTTP.Types.Method.Method
                           Data.ByteString.Internal.$fEqByteString
                           (case ipv1 of wild { Network.Wai.Internal.Request ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                            ds2 })
                           Foundation.$fYesodApp28 of wild {
                      GHC.Types.False -> GHC.Types.True
                      GHC.Types.True -> GHC.Types.False } #) }) -}
fd6edb7609e8ae9776273f07a32f264b
  $fYesodApp28 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp35
                   Foundation.$fYesodApp29) -}
ed8cb8d9e867219a8bd1e4072f5906cb
  $fYesodApp29 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp34
                   Foundation.$fYesodApp30) -}
16ae699b54ae7eadb353c582f90b1646
  $fYesodApp3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp4) -}
a2e393bf382e34d89f6d874f9a2aea33
  $fYesodApp30 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp33
                   Foundation.$fYesodApp31) -}
c1866b3f5dd4259c8646a1c2f1306624
  $fYesodApp31 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp32
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
a33ca6fe35b3f4c216505b47373f8fae
  $fYesodApp32 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "TRACE"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
988fcd53242c2b2fa11c17017f45c79a
  $fYesodApp33 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "OPTIONS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
9143ada22b17a475710ccf397d566691
  $fYesodApp34 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "HEAD"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
aece9dddbf478c19a33ec14dbcb28fe1
  $fYesodApp35 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "GET"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp36 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Network.Wai.Internal.Request
  {- Unfolding: (Yesod.Core.Handler.waiRequest
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Yesod.Core.Class.Yesod.$dmdefaultLayout_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp37 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: GHC.Types.Bool)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT -> Foundation.$fYesodApp43 eta eta1
                   Foundation.StaticR ds2 -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.HomeR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.FuncionarioR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.LoginR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.AdminR -> Foundation.$fYesodApp38 eta eta1 }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp38 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_m1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> (# ipv, Yesod.Core.Types.AuthenticationRequired #)
                   GHC.Base.Just x
                   -> case x of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                      case Data.Text.Encoding.$wdecodeUtf8With
                             Data.Text.Encoding.Error.lenientDecode
                             ww1
                             ww2
                             ww3
                             ww4 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                      case Foundation.$fYesodApp41 of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# dt2 dt5) of wild3 {
                        GHC.Types.False -> (# ipv, Foundation.$fYesodApp39 #)
                        GHC.Types.True
                        -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                              -> GHC.Prim.Word#
                                                                                                              -> GHC.Prim.ByteArray#
                                                                                                              -> GHC.Prim.Word#
                                                                                                              -> GHC.Prim.Word#
                                                                                                              -> GHC.Prim.State#
                                                                                                                   GHC.Prim.RealWorld
                                                                                                              -> (# GHC.Prim.State#
                                                                                                                      GHC.Prim.RealWorld,
                                                                                                                    GHC.Prim.Int# #)}
                                  dt
                                  (GHC.Prim.int2Word# dt1)
                                  dt3
                                  (GHC.Prim.int2Word# dt4)
                                  (GHC.Prim.int2Word# dt2)
                                  GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                           case GHC.Prim.narrow32Int# ds12 of wild5 {
                             DEFAULT -> (# ipv, Foundation.$fYesodApp39 #)
                             0# -> (# ipv, Yesod.Core.Types.Authorized #) } } } } } } } }) -}
72bdf23c3886cd5d67c9c841ca2971bf
  $fYesodApp39 :: Yesod.Core.Types.AuthResult
  {- Unfolding: (Yesod.Core.Types.Unauthorized
                   Foundation.$fYesodApp40) -}
d73c79d502a59ae75a4e51362262e855
  $fYesodApp4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp5) -}
774e2aa63333957ab36b25cf5831b7a1
  $fYesodApp40 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Nao eh admin!"#) -}
95968f061b5dc3f3252ade880920f670
  $fYesodApp41 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "root"#) -}
2d3e3c0b8cefb089c210e3f245d4b2b7
  $fYesodApp42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_ID"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp43 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_m1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> (# ipv, Yesod.Core.Types.AuthenticationRequired #)
                   GHC.Base.Just x -> (# ipv, Yesod.Core.Types.Authorized #) } }) -}
fb36c131e0b4d60a9fceccce2967f5d7
  $fYesodApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</h1>\n"#) -}
78fa5cca1982ecfa3c953fa0bb725e7f
  $fYesodApp6 :: Text.Blaze.Internal.Markup
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp7
                   GHC.Tuple.()) -}
545ce46ef600dc6f3b4fa3a3da11dd92
  $fYesodApp7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp8) -}
73fc1cf7552c721a56f246d37b828395
  $fYesodApp8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp9) -}
e6defaad8614b5a1839578c100b709ff
  $fYesodApp9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1>"#) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$caddStaticContent ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])))
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp19
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <GHC.Base.Maybe
                                            (Data.Either.Either
                                               Data.Text.Internal.Text
                                               (Yesod.Routes.Class.Route Foundation.App,
                                                [(Data.Text.Internal.Text,
                                                  Data.Text.Internal.Text)]))>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <GHC.Base.Maybe
                                       (Data.Either.Either
                                          Data.Text.Internal.Text
                                          (Yesod.Routes.Class.Route Foundation.App,
                                           [(Data.Text.Internal.Text,
                                             Data.Text.Internal.Text)]))>_N))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cauthRoute ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) -> Foundation.$fYesodApp26) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$ccleanPath ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App) (w1 :: [Data.Text.Internal.Text]) ->
                 Foundation.$w$ccleanPath w1) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cdefaultLayout ::
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cdefaultMessageWidget ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R <Text.Hamlet.HtmlUrl
                         (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <()>_N)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cerrorHandler ::
    Yesod.Core.Types.ErrorResponse
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.TypedContent
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cfileUpload ::
    Foundation.App
    -> Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 2, Strictness: <L,A><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Network.Wai.Internal.RequestBodyLength) ->
                 Foundation.$w$cfileUpload w1) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cisAuthorized ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.AuthResult
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp37
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Yesod.Core.Types.AuthResult>_N))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cisWriteRequest ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO GHC.Types.Bool
  {- Arity: 3, Strictness: <L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$fYesodApp27 eta eta1)
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <GHC.Types.Bool>_N))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cjoinPath ::
    Foundation.App
    -> Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 4, Strictness: <L,A><L,1*U(U,U,U)><L,1*U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [Data.Text.Internal.Text])
                   (w3 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 Foundation.$w$cjoinPath w1 w2 w3) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cmakeLogger ::
    Foundation.App -> GHC.Types.IO Yesod.Core.Types.Logger
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp18
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.Logger>_R)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cmakeSessionBackend ::
    Foundation.App
    -> GHC.Types.IO (GHC.Base.Maybe Yesod.Core.Types.SessionBackend)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp15
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe Yesod.Core.Types.SessionBackend>_R)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cmessageLoggerSource ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp17
                  `cast`
                (<Foundation.App>_R
                 ->_R <Yesod.Core.Types.Logger>_R
                 ->_R <Language.Haskell.TH.Syntax.Loc>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cshouldLogIO ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp11
                  `cast`
                (<Foundation.App>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$curlParamRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (y :: Foundation.App)
                   (route :: Yesod.Routes.Class.Route Foundation.App)
                   (params :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cyesodMiddleware ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp10
                  `cast`
                (forall (res :: <*>_N).
                 <Yesod.Core.Content.ToTypedContent res>_R
                 ->_R <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <res>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <res>_N))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$cyesodWithInternalState ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> (Control.Monad.Trans.Resource.InternalState -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 4, Strictness: <L,A><L,A><L,1*C1(C(U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, True)
                (\ @ a
                   (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
                   (eta2 :: Control.Monad.Trans.Resource.InternalState
                            -> GHC.Types.IO a)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (Control.Exception.Base.bracket
                    @ Control.Monad.Trans.Resource.InternalState
                    @ ()
                    @ a
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$screateInternalState
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$scloseInternalState
                    eta2)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta3)
                  `cast`
                (forall (a :: <*>_N).
                 <Foundation.App>_R
                 ->_R <GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R <Control.Monad.Trans.Resource.InternalState
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
f5f4f6ad30a37b506419183661dacd12
  $fYesodApp_$d(%,,,,%) ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$s$dmapproot :: Yesod.Core.Types.Approot Foundation.App
  {- HasNoCafRefs,
     Unfolding: InlineRule (-1, True, True)
                (Yesod.Core.Types.ApprootRelative @ Foundation.App) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$s$dmjsAttributes ::
    Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Types.[]
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$s$dmjsLoader ::
    Foundation.App
    -> Yesod.Core.Types.ScriptLoadPosition Foundation.App
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App) ->
                 Yesod.Core.Types.BottomOfBody @ Foundation.App) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$s$dmmaximumContentLength ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Base.Maybe GHC.Word.Word64
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (-1, True, False)
                (\ (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe
                             (Yesod.Routes.Class.Route Foundation.App)) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ GHC.Word.Word64
                   @ (GHC.Base.Maybe GHC.Word.Word64)
                   (GHC.Base.Just @ GHC.Word.Word64)
                   (GHC.Word.$fNumWord64_$c*
                      (GHC.Word.$fNumWord64_$c*
                         (GHC.Word.$fBitsWord64_$cfromInteger 2)
                         (GHC.Word.$fBitsWord64_$cfromInteger 1024))
                      (GHC.Word.$fBitsWord64_$cfromInteger 1024))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$s$dmshouldLog ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App)
                   (eta2 :: Control.Monad.Logger.LogSource)
                   (eta3 :: Control.Monad.Logger.LogLevel) ->
                 Yesod.Core.Class.Yesod.defaultShouldLog eta2 eta3) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_$s$dmurlRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
1153f0b0df5dbbac459967087ec696da
  $fYesodApp_$s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodApp_$d(%,,,,%))
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodApp_$d(%,,,,%)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodApp_m1 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT @ Foundation.App)
                   Foundation.$fYesodApp42) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp :: Yesod.Persist.Core.YesodPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodPersistApp_$cp1YesodPersist
                  Foundation.$fYesodPersistApp_$crunDB -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp1 ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: (\ @ a
                   (action :: Yesod.Persist.Core.YesodDB Foundation.App a)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodPersistApp4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                 <GHC.Types.IO>_N <Foundation.App>_N))
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <Foundation.App>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 ((Data.Pool.withResource
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ a
                     (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                        @ Foundation.App)
                     (case ipv1 of wild { Foundation.App ds ds2 ds3 ds4 ds5 -> ds3 })
                     (Database.Persist.Sql.Run.runSqlConn
                        @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                        @ Database.Persist.Sql.Types.Internal.SqlBackend
                        @ a
                        (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                           @ Foundation.App)
                        Foundation.$fYesodPersistApp2
                          `cast`
                        (GHC.Classes.(%,%)
                           <Database.Persist.Class.PersistStore.IsPersistBackend
                              Database.Persist.Sql.Types.Internal.SqlBackend>_N
                           ((Data.Type.Equality.~)
                              <*>_N
                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                              <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                        action
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N)_R))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <a>_N)
                    eta)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   ipv }) -}
eaf1f3173f9c7df26563b97ba229ecfc
  $fYesodPersistApp2 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Foundation.$fYesodPersistApp3
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
9f42d034b1c963fa968187767449080b
  $fYesodPersistApp3 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp4 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (Yesod.Core.Class.Handler.HandlerSite
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Unfolding: (Yesod.Core.Handler.getYesod
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$cp1YesodPersist ::
    GHC.Base.Monad (Yesod.Persist.Core.YesodDB Foundation.App)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fMonadReaderT
                   @ Database.Persist.Sql.Types.Internal.SqlBackend)
                  `cast`
                (GHC.Base.Monad
                   (Control.Monad.Trans.Reader.ReaderT
                      <*>_N
                      (Sym (Foundation.D:R:YesodPersistBackendApp[0]))
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N)_N)_R -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$crunDB ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp1
                  `cast`
                (forall (a :: <GHC.Types.*>_N).
                 <Yesod.Persist.Core.YesodDB Foundation.App a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <a>_N))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$dApplicative ::
    GHC.Base.Applicative
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT
                   @ Foundation.App) -}
5a141eeb39837cb01273510529db3d4d
  $fYesodPersistApp_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
07dd5f47907efb513dc1f29ff66a74dd
  $fYesodPersistApp_$s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad) -}
57c8020014de33e638ed2016181559bd
  $fYesodPersistApp_$s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta :: a)
                   (eta1 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
                     @ r)
                  (\ @ a (eta :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                     = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                         @ GHC.Types.IO
                         @ Foundation.App
                         Foundation.$fYesodPersistApp_$dMonad
                         @ a
                         eta
                   } in
                   (\ (eta1 :: r) ->
                    GHC.Base.const
                      @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                      @ r
                      m1
                      eta1)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <r>_R
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                             <a>_N)))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*>
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ (a -> b)
                         f
                         r1)
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         v
                         r1))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fFunctorReaderT -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fApplicativeReaderT_$cpure ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ r @ a (eta :: a) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                   = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ a
                       eta
                 } in
                 (\ (eta1 :: r) ->
                  GHC.Base.const
                    @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ r
                    m1
                    eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N
                           <r>_R
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N))) -}
2b768ef24fd2cecea71956f314b38a28
  $fYesodPersistApp_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r)
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ r
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (eta2 :: r) ->
                 let {
                   f :: b -> a {- Arity: 1 -} = \ (ds :: b) -> eta
                 } in
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <a>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ b
                           eta1
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ b
                       @ a
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <a>_N)
                   eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: a -> b)
                   (eta :: Control.Monad.Trans.Reader.ReaderT
                             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (eta1 :: r) ->
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <b>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ a
                           eta
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ a
                       @ b
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <b>_N)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <b>_N)) -}
5d4196121aeade340d0232af2d13b3ce
  $fYesodPersistApp_$s$fMonadBaseControlbHandlerT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl
                     @ site)
                  (Yesod.Core.Types.$fMonadBaseControlbHandlerT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Yesod.Core.Types.$fMonadBaseControlbHandlerT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
1612ca880fc68bc02054cf17119291fb
  $fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT -}
3d1bc7a7ef08c9a9b10c5b1112cc13e1
  $fYesodPersistApp_$s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
e4655b2551937b399bc909b35e39a8e2
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta :: GHC.Types.IO α) ->
                 let {
                   eta1 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta1)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
19afdead0d4730ade396b3352112f5e6
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
0831402b5ef5fc5782b7bba9a5afa4c0
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT -}
81ad2fb1e99c61d1c166eeefe1c6d83f
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
13d76a20ef73f9caeb30321796e2491a
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fMonadHandlerT -}
cc93be6fc05796b799c01867146df8f3
  $fYesodPersistApp_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT_$creturn
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail @ site) -}
185bfccc69ff71735ff5e1b6b20a28f4
  $fYesodPersistApp_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   Foundation.$fYesodPersistApp_$dMonad
                   eta) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fMonadReaderT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         k
                         r1))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> (a
        -> Control.Monad.Trans.Reader.ReaderT
             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><L,C(C1(C1(C1(U))))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: a
                         -> Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         (k a1)
                         r1))) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ r @ a (msg :: GHC.Base.String) (eta :: r) ->
                 Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail
                   @ Foundation.App
                   @ a
                   msg)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $fYesodPersistApp_$s$fMonadReaderT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeReaderT -}
6e837555c06e61c4caa1a0276d9ec6d8
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5520352963557942905##
                   2048708526553047642##
                   Foundation.$trModule
                   Foundation.$tc'App1) -}
ffa094d4df66512838994ee79b4d737c
  $tc'App1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'App"#) -}
1a9a5809b08763a9dff7a01bafbbfd8f
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12233861718273106289##
                   2195186055687721967##
                   Foundation.$trModule
                   Foundation.$tcApp1) -}
b83fa34e993ee0a1020fc1a80b72f973
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
fb891237e3dcbd8d6116b097076ef2d7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foundation.$trModule2
                   Foundation.$trModule1) -}
bea20f347b2403af54d6178406b05f21
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Foundation"#) -}
b8e722f2640a1902aacc9afbe3e66d81
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "aulahaskell-0.0.0-XMpds6OjaGCGlrWg68CUX"#) -}
71c2fc59050fb9823c39593f283629f0
  $w$ccleanPath ::
    [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: [Data.Text.Internal.Text]) ->
                 let {
                   corrected :: [Data.Text.Internal.Text]
                   = GHC.List.filter
                       @ Data.Text.Internal.Text
                       Foundation.$fYesodApp25
                       w
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        corrected
                        w of wild {
                   GHC.Types.False
                   -> Data.Either.Left
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        corrected
                   GHC.Types.True
                   -> Data.Either.Right
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        (GHC.Base.map
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text
                           Foundation.$fYesodApp23
                           w) }) -}
b4e8f85e435cdda55478a5e39498b00a
  $w$cfileUpload ::
    Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Network.Wai.Internal.RequestBodyLength) ->
                 case w of wild {
                   Network.Wai.Internal.ChunkedBody -> Foundation.$fYesodApp14
                   Network.Wai.Internal.KnownLength size
                   -> case size of wild1 { GHC.Word.W64# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord# x 50000##) of wild2 {
                        GHC.Types.False -> Foundation.$fYesodApp14
                        GHC.Types.True -> Foundation.$fYesodApp12 } } }) -}
e0b2dbad459e5f24dbcccfd40d682e81
  $w$cjoinPath ::
    Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: [Data.Text.Internal.Text])
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 let {
                   ds :: [GHC.Types.Char]
                   = case w of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                     let {
                       end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                     } in
                     letrec {
                       $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                         {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                       = \ (ww :: GHC.Prim.Int#) ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# ww end) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.geWord# r# 55296##) of wild2 {
                                GHC.Types.False
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                     ($wunfold (GHC.Prim.+# ww 1#))
                                GHC.Types.True
                                -> case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.leWord# r# 56319##) of wild3 {
                                     GHC.Types.False
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                          ($wunfold (GHC.Prim.+# ww 1#))
                                     GHC.Types.True
                                     -> case GHC.Prim.indexWord16Array#
                                               dt
                                               (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                        GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C#
                                             (GHC.Prim.chr#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.uncheckedIShiftL#
                                                         (GHC.Prim.-#
                                                            (GHC.Prim.word2Int# r#)
                                                            55296#)
                                                         10#)
                                                      (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                                   65536#)))
                                          ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                           GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                     } in
                     $wunfold dt1 }
                 } in
                 let {
                   ds1 :: Data.ByteString.Builder.Internal.Builder
                   = Network.HTTP.Types.URI.encodePath
                       (case w1 of wild {
                          [] -> Foundation.$fYesodApp22
                          : ds2 ds3
                          -> GHC.Base.map
                               @ Data.Text.Internal.Text
                               @ Data.Text.Internal.Text
                               Foundation.$fYesodApp21
                               wild })
                       (GHC.Base.map
                          @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                          @ (Data.ByteString.Internal.ByteString,
                             GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                          Foundation.$fYesodApp20
                          w2)
                 } in
                 (\ @ r (eta :: Data.ByteString.Builder.Internal.BuildStep r) ->
                  let {
                    w3 :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                    = ds1 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                        @ r
                        eta
                  } in
                  \ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case w4 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                  Foundation.$wstep @ r ds w3 ww1 ww2 w5 })
                   `cast`
                 (Trans
                      (forall (r :: <*>_N).
                       <Data.ByteString.Builder.Internal.BuildStep r>_R
                       ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                      (Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) -}
56b9f605f5657f07a821941139a5d645
  $w$cmakeSessionBackend ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Web.ClientSession.getDefaultKey2
                        Web.ClientSession.defaultKeyFile
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Internal.Session.clientSessionDateCacher1
                        Foundation.$fYesodApp16
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.N:NominalDiffTime[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) getCachedDate _closeDateCacher ->
                 (# ipv2,
                    GHC.Base.Just
                      @ Yesod.Core.Types.SessionBackend
                      (Yesod.Core.Class.Yesod.defaultClientSessionBackend3
                         ipv1
                         getCachedDate
                         Yesod.Core.Class.Yesod.defaultClientSessionBackend2)
                        `cast`
                      (Trans
                           (<Network.Wai.Internal.Request>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <(Data.Map.Base.Map
                                              Data.Text.Internal.Text
                                              Data.ByteString.Internal.ByteString,
                                            Yesod.Core.Types.SessionMap
                                            -> GHC.Types.IO [Yesod.Core.Types.Header])>_R))
                           (Sym (Yesod.Core.Types.N:SessionBackend[0]))) #) } } }) -}
195f584b2b1b605e030213de71f53cd6
  $w$cmessageLoggerSource ::
    Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Yesod.Core.Types.Logger)
                   (w1 :: Language.Haskell.TH.Syntax.Loc)
                   (w2 :: Control.Monad.Logger.LogSource)
                   (w3 :: Control.Monad.Logger.LogLevel)
                   (w4 :: System.Log.FastLogger.LogStr.LogStr)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w6 :: GHC.Prim.Void#)[OneShot] ->
                     case Yesod.Core.Class.Yesod.defaultMessageLoggerSource2
                            (Yesod.Core.Types.loggerDate w)
                            w1
                            w2
                            w3
                            w4
                            w5 of ds2 { (#,#) ipv2 ipv3 ->
                     Yesod.Core.Types.loggerPutStr1 w ipv3 ipv2 }
                 } in
                 case w3 of wild {
                   Control.Monad.Logger.LevelDebug -> (# w5, GHC.Tuple.() #)
                   Control.Monad.Logger.LevelInfo -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelWarn -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelError -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelOther a1 -> $j GHC.Prim.void# }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $w$cparseRoute ::
    [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  $w$cyesodMiddleware ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.YesodRequest
    -> Yesod.Core.Types.RunHandlerEnv Foundation.App
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld Yesod.Core.Types.GHState
    -> (Yesod.Routes.Class.Route Foundation.App
        -> Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 7,
     Strictness: <L,1*C1(C1(U(U,U)))><S,U><S,U><S,U><S,U><L,U><S,U>,
     Inline: [0] -}
1f79a49d4c0912565a962ac017b76246
  $w$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0] -}
6fb28edfd6c4731c8fbc86fb1e8be328
  $woptional ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Funcionario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
79ecfe791c563290ea83b788881ca4e6
  $woptional1 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Funcionario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
76a0cd79e76c08cb0a134a439e8d05ac
  $woptional2 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Funcionario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
e05644d484e21830098bed2321fc32bd
  $woptional3 ::
    GHC.Prim.Int#
    -> forall b.
       (Yesod.Routes.Class.Route Yesod.Static.Static
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
9b5e6f9615cd357b385393a1d7a8dc92
  $wstep ::
    [GHC.Types.Char]
    -> (Data.ByteString.Builder.Internal.BufferRange
        -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,U><L,U><S,U>, Inline: [0] -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  data App
    = App {appSettings :: Settings.AppSettings,
           appStatic :: Yesod.Static.Static,
           appConnPool :: Database.Persist.Sql.Types.ConnectionPool,
           appHttpManager :: Network.HTTP.Client.Types.Manager,
           appLogger :: Yesod.Core.Types.Logger}
79eb4081d8b546c0f6d31b7b3b8d4bab
  axiom D:R:RouteApp0::
      Yesod.Routes.Class.Route Foundation.App = Foundation.R:RouteApp
79eb4081d8b546c0f6d31b7b3b8d4bab
  axiom D:R:YesodPersistBackendApp::
      Yesod.Persist.Core.YesodPersistBackend Foundation.App
        = Database.Persist.Sql.Types.Internal.SqlBackend
e02ec67056dddcdec8cc78ff488e2d75
  type Form a =
    Text.Blaze.Html.Html
    -> Yesod.Form.Types.MForm
         Foundation.Handler
         (Yesod.Form.Types.FormResult a, Foundation.Widget)
8e7f3609a4eb71ed970a0d355e4f41d6
  type Handler =
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO
    :: GHC.Types.* -> *
79eb4081d8b546c0f6d31b7b3b8d4bab
  data instance Yesod.Routes.Class.Route Foundation.App
    = StaticR (Yesod.Routes.Class.Route Yesod.Static.Static)
    | FaviconR
    | RobotsR
    | HomeR
    | FuncionarioR
    | TodosFuncionariosR
    | FuncionarioPerfilR Model.FuncionarioId
    | FuncionarioApagarR Model.FuncionarioId
    | FuncionarioAlteraR Model.FuncionarioId
    | LoginR
    | LogoutR
    | AdminR
    RecFlag: Recursive
3be03397e9d91e4726afac47b3551874
  type Widget =
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
ce36d7dd124fe1656d33ed53855ea07d
  appConnPool ::
    Foundation.App -> Database.Persist.Sql.Types.ConnectionPool
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
79eb4081d8b546c0f6d31b7b3b8d4bab
  appHttpManager ::
    Foundation.App -> Network.HTTP.Client.Types.Manager
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
1b3bde13d850431ce0ab2c440d600e8f
  appLogger :: Foundation.App -> Yesod.Core.Types.Logger
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
9f3a46b3fb4dd6f63393b1cb16df4025
  appSettings :: Foundation.App -> Settings.AppSettings
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
4eacc67a523359b231889a15b21c6eb9
  appStatic :: Foundation.App -> Yesod.Static.Static
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
975267548bf8fe8972cb5dc6efc68c27
  isAdmin :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp38
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Yesod.Core.Types.AuthResult>_N))) -}
a3dc09ecbd3bf8b5e9789909d085ae89
  isUser :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp43
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Yesod.Core.Types.AuthResult>_N))) -}
37b23c0b0d38b8f8e66fc9545c0cf733
  resourcesApp ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp80
                   Foundation.resourcesApp1) -}
1890d05eb4448657d5cf20e2c00e01cb
  resourcesApp1 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp75
                   Foundation.resourcesApp2) -}
3c3d369588b28e2de2674df3d110cf3c
  resourcesApp10 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp20
                   Foundation.resourcesApp11) -}
dc71d8f3989296c895509eb5def63055
  resourcesApp11 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp12
                   (GHC.Types.[]
                      @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String))) -}
093005eea9e2f3659781a78036553827
  resourcesApp12 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp13) -}
ca168dc4a53a199d54b67adc1eb7aeef
  resourcesApp13 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute22
                   Foundation.resourcesApp17
                   Foundation.resourcesApp14
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
e6ab0688acbd1e0af19224abd2faaf3c
  resourcesApp14 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp15) -}
16fd5a4f2d805d26955318739018e419
  resourcesApp15 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp16
                   (GHC.Types.[] @ GHC.Base.String)) -}
0072e9ed4a136564a25084d01956eed9
  resourcesApp16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET"#) -}
6f6158d2774424b8b0380704f43a3fa2
  resourcesApp17 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp18
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
347d1a7f26d5c553529cb310370dd0f1
  resourcesApp18 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp19) -}
0298be28c01645e7eebb6791d37d8496
  resourcesApp19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "admin"#) -}
7609cb7a1be5abfe54fe1d772533fce5
  resourcesApp2 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp70
                   Foundation.resourcesApp3) -}
83a29cd4e7af15992e1aaf6b52118ed6
  resourcesApp20 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp21) -}
ed3ab53b920e29a2c90c195dc893cae3
  resourcesApp21 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute25
                   Foundation.resourcesApp25
                   Foundation.resourcesApp22
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
ee33bacab7e636fab6ac3e8aa4c47509
  resourcesApp22 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp23) -}
da49b8d683b747f73f0dc1033c107db8
  resourcesApp23 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)) -}
600c4f3be33f857deab7bb0c28e7efc0
  resourcesApp24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST"#) -}
d9b4cd5b470de8a3059711af907cd317
  resourcesApp25 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp26
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
532ed41af7f63b171daa19ea53949c3c
  resourcesApp26 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp27) -}
ebcf835a03e0df371bb87688bc4b4c12
  resourcesApp27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logout"#) -}
95b27d3429d97d8340385d39372b39de
  resourcesApp28 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp29) -}
a1c1f2aebcad3b4d401acfa26d6bf1e1
  resourcesApp29 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute28
                   Foundation.resourcesApp32
                   Foundation.resourcesApp30
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
4555c9e1a1cc8f3925759ee4dac311d1
  resourcesApp3 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp68
                   Foundation.resourcesApp4) -}
aaba63a46726ac2e9cf3e449ed9e8d1e
  resourcesApp30 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp31) -}
5e0d9dc736ac290c883683342a44652b
  resourcesApp31 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp16
                   Foundation.resourcesApp23) -}
91dc565af948b0ffa449698d7217d1dc
  resourcesApp32 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp33
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
2e1f373c85d78b77b743cb1952a631b6
  resourcesApp33 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp34) -}
aed4946fe8c99b8765b4697ceaea2e4f
  resourcesApp34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "login"#) -}
f1bfbaf8ac05ba40f279bc73330647ed
  resourcesApp35 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp36) -}
5c357ca06d0933b9c9ed40c5fd12952b
  resourcesApp36 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute5
                   Foundation.resourcesApp37
                   Foundation.resourcesApp30
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
7fac6ea45c00162268bc9c91444ba78b
  resourcesApp37 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp44
                   Foundation.resourcesApp38) -}
0b274440fd469ceba3e8561baf34490f
  resourcesApp38 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp42
                   Foundation.resourcesApp39) -}
d566348f3424f4d47b73ece0873768e2
  resourcesApp39 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
44d504b41f4bf6122936e2b6d8e2a297
  resourcesApp4 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp65
                   Foundation.resourcesApp5) -}
178f7297029cc0990617f8255b7491f8
  resourcesApp40 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp41) -}
f879dbe1b4a3e873d207a8aa837cc7e3
  resourcesApp41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "alterar"#) -}
dd1c910013c0e3c44d6136162aacbcc5
  resourcesApp42 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp43) -}
8d8896b65a60c6a8425099bd97d0573d
  resourcesApp43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioId"#) -}
f0bdffe44315f174ca0dd9d4dded9a0e
  resourcesApp44 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp45) -}
8baf276c6f7e7a29d0a15d5d7be9fa74
  resourcesApp45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "funcionario"#) -}
271b7500c6eebf339e3e9e680ff4451b
  resourcesApp46 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp47) -}
8afcf95d787d630086d79b3eac940551
  resourcesApp47 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute7
                   Foundation.resourcesApp48
                   Foundation.resourcesApp22
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
22753c7992f64599e14ebfd0c1b447ee
  resourcesApp48 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp44
                   Foundation.resourcesApp49) -}
f69a5c13db939ff92b5f77010f9e6d8d
  resourcesApp49 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp42
                   Foundation.resourcesApp50) -}
b9bf89ebba958260a4b71b34ac9b25b3
  resourcesApp5 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp60
                   Foundation.resourcesApp6) -}
23d1bbab73c5ffec0664a78a12851cd4
  resourcesApp50 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
46bc827e972c3fec086cb7711a2024b5
  resourcesApp51 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp52) -}
4b34873e0e42b6698626ecb9e8f461b7
  resourcesApp52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "apagar"#) -}
5c5475764392335f5b30cb112f1815e8
  resourcesApp53 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp54) -}
f2392c243827e28f3770212d69540d89
  resourcesApp54 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute9
                   Foundation.resourcesApp55
                   Foundation.resourcesApp14
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
56c97d92686fa758cf468c2d2543eda1
  resourcesApp55 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp44
                   Foundation.resourcesApp56) -}
1999204d5a9618b87800730840e763e4
  resourcesApp56 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp42
                   Foundation.resourcesApp57) -}
74ecc085db865a3c9dcc15eabd339ea5
  resourcesApp57 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp58
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
5c48fe67480819ae9f60be5ee57d2255
  resourcesApp58 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp59) -}
5ee64df52a07bed42dc8a799fd716d92
  resourcesApp59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "perfil"#) -}
f45d3ce3600654b463ebf0f0a7223d1c
  resourcesApp6 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp53
                   Foundation.resourcesApp7) -}
13327ada0158a6a7ef4a5641f5063b6d
  resourcesApp60 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp61) -}
7ab3ca19084be846bb936187ba82cd2e
  resourcesApp61 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute31
                   Foundation.resourcesApp62
                   Foundation.resourcesApp14
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
0ae036d41420c6de35257b2c31717a71
  resourcesApp62 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp63
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
819c3017e6800aea61d36462a3ab697b
  resourcesApp63 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp64) -}
80db33da71a48cce74bbecfa2afcfeef
  resourcesApp64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "funcionarios"#) -}
c5ec6240a4feb4f57c97417c50e7bfeb
  resourcesApp65 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp66) -}
2a32313cef0fedb11c68001cd3ee69bc
  resourcesApp66 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute34
                   Foundation.resourcesApp67
                   Foundation.resourcesApp30
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
3aabe7429bd0f21efc57efdba0e34964
  resourcesApp67 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp44
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
087bdefb9febb8779780630019327ed3
  resourcesApp68 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp69) -}
69b301aed9dbb5a83a7ba562163e8a31
  resourcesApp69 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute37
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))
                   Foundation.resourcesApp14
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
ac7006fc90fe569a7ffb549a04e8925f
  resourcesApp7 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp46
                   Foundation.resourcesApp8) -}
a78ac1ad1587f1245e67c9338b99a4ec
  resourcesApp70 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp71) -}
8ffebe664764c2cb675f6802183b6d76
  resourcesApp71 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute40
                   Foundation.resourcesApp72
                   Foundation.resourcesApp14
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
d0c62264526daffed715612fbc4b657e
  resourcesApp72 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp73
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
67e352fcfc71453e78c778db270da69d
  resourcesApp73 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp74) -}
cb1d909ab5150d1d8ebaf871798f0fe1
  resourcesApp74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "robots.txt"#) -}
81f5b42313fee59e4d4c7c6dec69108e
  resourcesApp75 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp76) -}
7695d8ca8c273e326a19fe6c8b43c08c
  resourcesApp76 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute43
                   Foundation.resourcesApp77
                   Foundation.resourcesApp14
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
a480b533b8b7a03827934281d97caec6
  resourcesApp77 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp78
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
1320522187dd1782753beab24347c884
  resourcesApp78 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp79) -}
659c3fe157e9d05d8cce404900d972a0
  resourcesApp79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "favicon.ico"#) -}
db82e15c91cf739008493e08fadec309
  resourcesApp8 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp35
                   Foundation.resourcesApp9) -}
7ad0d398c56ebb875a54c80ae1392ed6
  resourcesApp80 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp81) -}
61b8187eb213cd7e8e3a800ee731018d
  resourcesApp81 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute11
                   Foundation.resourcesApp85
                   Foundation.resourcesApp82
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
ec0dc76f48c834807ca43effb46846b6
  resourcesApp82 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Subsite
                   @ GHC.Base.String
                   Foundation.resourcesApp84
                   Foundation.resourcesApp83) -}
3c8828926a14cc52fb65f6c780dbc3cc
  resourcesApp83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "appStatic"#) -}
db9daced18ed03208029cf8f27bb6559
  resourcesApp84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Static"#) -}
98f401b7792d36e4a939bf615e8d19f3
  resourcesApp85 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp86
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
664561d8887fe54d4bba7285ef518ff2
  resourcesApp86 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp87) -}
98a505641f72b9d1d8f942cd9abe545f
  resourcesApp87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "static"#) -}
91e1b195a6cf2d6eed8086f04d726d38
  resourcesApp9 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp28
                   Foundation.resourcesApp10) -}
instance GHC.Classes.Eq [Yesod.Routes.Class.Route]
  = Foundation.$fEqRoute
instance Network.HTTP.Client.Types.HasHttpManager [Foundation.App]
  = Foundation.$fHasHttpManagerApp
instance Yesod.Routes.Class.ParseRoute [Foundation.App]
  = Foundation.$fParseRouteApp
instance GHC.Read.Read [Yesod.Routes.Class.Route]
  = Foundation.$fReadRoute
instance Text.Shakespeare.I18N.RenderMessage [Foundation.App,
                                              Yesod.Form.Types.FormMessage]
  = Foundation.$fRenderMessageAppFormMessage
instance Yesod.Routes.Class.RenderRoute [Foundation.App]
  = Foundation.$fRenderRouteApp
instance Yesod.Routes.Class.RouteAttrs [Foundation.App]
  = Foundation.$fRouteAttrsApp
instance GHC.Show.Show [Yesod.Routes.Class.Route]
  = Foundation.$fShowRoute
instance Yesod.Core.Class.Yesod.Yesod [Foundation.App]
  = Foundation.$fYesodApp
instance Yesod.Persist.Core.YesodPersist [Foundation.App]
  = Foundation.$fYesodPersistApp
family instance Yesod.Routes.Class.Route [Foundation.App]
  = Foundation.D:R:RouteApp0
family instance Yesod.Persist.Core.YesodPersistBackend [Foundation.App]
  = Foundation.D:R:YesodPersistBackendApp
"SPEC/Foundation $dmapproot @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                 Foundation.App)
  Yesod.Core.Class.Yesod.$dmapproot @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmapproot
"SPEC/Foundation $dmjsAttributes @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                      Foundation.App)
  Yesod.Core.Class.Yesod.$dmjsAttributes @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmjsAttributes
"SPEC/Foundation $dmjsLoader @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                  Foundation.App)
  Yesod.Core.Class.Yesod.$dmjsLoader @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmjsLoader
"SPEC/Foundation $dmmaximumContentLength @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                              Foundation.App)
  Yesod.Core.Class.Yesod.$dmmaximumContentLength @ Foundation.App
                                                 $dYesod
  = Foundation.$fYesodApp_$s$dmmaximumContentLength
"SPEC/Foundation $dmshouldLog @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                   Foundation.App)
  Yesod.Core.Class.Yesod.$dmshouldLog @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmshouldLog
"SPEC/Foundation $dmurlRenderOverride @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                           Foundation.App)
  Yesod.Core.Class.Yesod.$dmurlRenderOverride @ Foundation.App
                                              $dYesod
  = Foundation.$fYesodApp_$s$dmurlRenderOverride
"SPEC/Foundation $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                               ($dMonad :: GHC.Base.Monad
                                                                             GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT @ site
"SPEC/Foundation $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT_$creturn
      @ site
"SPEC/Foundation $fApplicativeReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dApplicative :: GHC.Base.Applicative
                                                                                                 (Yesod.Core.Types.HandlerT
                                                                                                    Foundation.App
                                                                                                    GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r
"SPEC/Foundation $fApplicativeReaderT_$c<*> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                   ($dApplicative :: GHC.Base.Applicative
                                                                                                       (Yesod.Core.Types.HandlerT
                                                                                                          Foundation.App
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ (Yesod.Core.Types.HandlerT
                                                             Foundation.App GHC.Types.IO)
                                                        @ r
                                                        $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Foundation $fApplicativeReaderT_$cp1Applicative @ (HandlerT
                                                          App IO) _" [ALWAYS] forall @ r
                                                                                                                                                       ($dApplicative :: GHC.Base.Applicative
                                                                                                                                                                           (Yesod.Core.Types.HandlerT
                                                                                                                                                                              Foundation.App
                                                                                                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cp1Applicative @ (Yesod.Core.Types.HandlerT
                                                                       Foundation.App GHC.Types.IO)
                                                                  @ r
                                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
      @ r
"SPEC/Foundation $fApplicativeReaderT_$cpure @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                    ($dApplicative :: GHC.Base.Applicative
                                                                                                        (Yesod.Core.Types.HandlerT
                                                                                                           Foundation.App
                                                                                                           GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cpure @ (Yesod.Core.Types.HandlerT
                                                              Foundation.App GHC.Types.IO)
                                                         @ r
                                                         $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r
"SPEC/Foundation $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                           ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Foundation.$fYesodPersistApp_$s$fFunctorHandlerT @ site
"SPEC/Foundation $fFunctorReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.App
                                                                                            GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT @ (Yesod.Core.Types.HandlerT
                                                   Foundation.App GHC.Types.IO)
                                              @ r
                                              $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r
"SPEC/Foundation $fFunctorReaderT_$c<$ @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dFunctor :: GHC.Base.Functor
                                                                                              (Yesod.Core.Types.HandlerT
                                                                                                 Foundation.App
                                                                                                 GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r
"SPEC/Foundation $fFunctorReaderT_$cfmap @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                ($dFunctor :: GHC.Base.Functor
                                                                                                (Yesod.Core.Types.HandlerT
                                                                                                   Foundation.App
                                                                                                   GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ (Yesod.Core.Types.HandlerT
                                                          Foundation.App GHC.Types.IO)
                                                     @ r
                                                     $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Foundation $fMonadBaseControlbHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                          ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBaseControlbHandlerT @ GHC.Types.IO
                                               @ GHC.Types.IO
                                               @ site
                                               $dMonadBaseControl
  = Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT @ site
"SPEC/Foundation $fMonadBaseControlbHandlerT_$cp1MonadBaseControl @ IO @ IO _" [ALWAYS] forall @ site
                                                                                               ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                                        GHC.Types.IO
                                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBaseControlbHandlerT_$cp1MonadBaseControl @ GHC.Types.IO
                                                                    @ GHC.Types.IO
                                                                    @ site
                                                                    $dMonadBaseControl
  = Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl
      @ site
"SPEC/Foundation $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                   ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                     GHC.Types.IO
                                                                                     GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp2MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp2MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp4MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp4MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase
      @ site
"SPEC/Foundation $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                                ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                 GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Foundation.$fYesodApp_$s$fMonadHandlerHandlerT @ site
"SPEC/Foundation $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadHandlerT @ site
"SPEC/Foundation $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                                ($dMonad :: GHC.Base.Monad
                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail @ site
"SPEC/Foundation $fMonadReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.HandlerT
                                                                                        Foundation.App
                                                                                        GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT @ (Yesod.Core.Types.HandlerT
                                                 Foundation.App GHC.Types.IO)
                                            @ r
                                            $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT @ r
"SPEC/Foundation $fMonadReaderT_$c>> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                            ($dMonad :: GHC.Base.Monad
                                                                                          (Yesod.Core.Types.HandlerT
                                                                                             Foundation.App
                                                                                             GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ (Yesod.Core.Types.HandlerT
                                                      Foundation.App GHC.Types.IO)
                                                 @ r
                                                 $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r
"SPEC/Foundation $fMonadReaderT_$c>>= @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dMonad :: GHC.Base.Monad
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.App
                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r
"SPEC/Foundation $fMonadReaderT_$cfail @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dMonad :: GHC.Base.Monad
                                                                                            (Yesod.Core.Types.HandlerT
                                                                                               Foundation.App
                                                                                               GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r
"SPEC/Foundation $fMonadReaderT_$cp1Monad @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                 ($dMonad :: GHC.Base.Monad
                                                                                               (Yesod.Core.Types.HandlerT
                                                                                                  Foundation.App
                                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cp1Monad @ (Yesod.Core.Types.HandlerT
                                                           Foundation.App GHC.Types.IO)
                                                      @ r
                                                      $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r
"SPEC/Foundation fromList @ Text" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                              Data.Text.Internal.Text)
  Data.Set.Base.fromList @ Data.Text.Internal.Text $dOrd
  = Foundation.$fRouteAttrsApp_$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

